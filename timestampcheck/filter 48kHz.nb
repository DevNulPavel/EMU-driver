(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    134314,       2508]
NotebookOptionsPosition[    130535,       2381]
NotebookOutlinePosition[    130916,       2398]
CellTagsIndexPosition[    130873,       2395]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"spring", " ", "-", " ", 
   RowBox[{
   "damper", " ", "system", " ", "that", " ", "takes", " ", "moving", " ", 
    "average", " ", "of", " ", "sample", " ", 
    RowBox[{"times", "."}]}]}], "Title"]], "Input",
 EmphasizeSyntaxErrors->True],

Cell["\<\
Note. We give the received time values the name ' xin' to avoid confusion \
with actual system time t. The filter ouptut is called 'x'.\
\>", "Text",
 CellChangeTimes->{{3.6244200938995543`*^9, 3.624420143786385*^9}, 
   3.624420967536532*^9, {3.624421012897133*^9, 3.624421013871067*^9}, {
   3.62442158531568*^9, 3.6244215949872093`*^9}}],

Cell["\<\
There is noise on the wrap time found in the USB packets. The job here is to \
filter out the noise\
\>", "Text",
 CellChangeTimes->{{3.624458069538824*^9, 3.62445808695254*^9}}],

Cell[CellGroupData[{

Cell["\<\
sample times. Each time is time wrap was reported. 
grep notifyWrap /var/log/system.log | awk ' // { print $7 \",\" }'\
\>", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.624419203678996*^9, 3.6244192234627237`*^9}, {
  3.6244192587333107`*^9, 3.624419269981051*^9}, {3.624458058498413*^9, 
  3.62445806730379*^9}, {3.628267504259178*^9, 3.6282675047527313`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xin", "=", 
   RowBox[{"{", 
    RowBox[{
    "69321093689865", ",", "69321264688662", ",", "69321435688520", ",", 
     "69321605691179", ",", "69321776690817", ",", "69321947690937", ",", 
     "69322117688799", ",", "69322288691798", ",", "69322459691727", ",", 
     "69322629692333", ",", "69322800691360", ",", "69322971690758", ",", 
     "69323141698967", ",", "69323312690562", ",", "69323483698375", ",", 
     "69323653691914", ",", "69323824691543", ",", "69323995690790", ",", 
     "69324165689726", ",", "69324336691105", ",", "69324507711998", ",", 
     "69324677684136", ",", "69324848716914", ",", "69325019691304", ",", 
     "69325189688931", ",", "69325360710667", ",", "69325531711036", ",", 
     "69325701699417", ",", "69325872691903", ",", "69326043698885", ",", 
     "69326213691350", ",", "69326384716135", ",", "69326555698601", ",", 
     "69326726723286", ",", "69326896689709", ",", "69327067723640", ",", 
     "69327238688425", ",", "69327408700502", ",", "69327579710445", ",", 
     "69327750688849", ",", "69327920689582", ",", "69328091689402", ",", 
     "69328262719250", ",", "69328432703062", ",", "69328603703259", ",", 
     "69328774688800", ",", "69328944711439", ",", "69329115713523", ",", 
     "69329286684200", ",", "69329456688674", ",", "69329627684619", ",", 
     "69329798705104", ",", "69329968720124", ",", "69330139725734", ",", 
     "69330310730397", ",", "69330480709267", ",", "69330651703165", ",", 
     "69330822712773", ",", "69330992704477", ",", "69331163688248", ",", 
     "69331334726169", ",", "69331504722657", ",", "69331675683745", ",", 
     "69331846726668", ",", "69332016723779", ",", "69332187684200", ",", 
     "69332358728544", ",", "69332528688927", ",", "69332699688705", ",", 
     "69332870712484", ",", "69333040702989", ",", "69333211689806", ",", 
     "69333382689655", ",", "69333552724753", ",", "69333723722978", ",", 
     "69333894700150", ",", "69334064725274", ",", "69334235703116", ",", 
     "69334406702924", ",", "69334576713131", ",", "69334747688244", ",", 
     "69334918688987", ",", "69335088697192", ",", "69335259720284", ",", 
     "69335430688561", ",", "69335600713258", ",", "69335771711353", ",", 
     "69335942691586", ",", "69336112711788", ",", "69336283688143", ",", 
     "69336454701881", ",", "69336624708193", ",", "69336795709000", ",", 
     "69336966705472", ",", "69337136702671", ",", "69337307709604", ",", 
     "69337478688418", ",", "69337649717811", ",", "69337819723936", ",", 
     "69337990688420", ",", "69338161725908", ",", "69338331721475", ",", 
     "69338502726359", ",", "69338673723582", ",", "69338843689127", ",", 
     "69339014726470", ",", "69339185688556", ",", "69339355725237", ",", 
     "69339526703161", ",", "69339697704309", ",", "69339867720567", ",", 
     "69340038688898", ",", "69340209688444", ",", "69340379725621", ",", 
     "69340550713128", ",", "69340721688332", ",", "69340891688754", ",", 
     "69341062720704", ",", "69341233688233", ",", "69341403726441", ",", 
     "69341574688450", ",", "69341745706087", ",", "69341915715311", ",", 
     "69342086688990", ",", "69342257684139", ",", "69342427720382", ",", 
     "69342598691467", ",", "69342769688402", ",", "69342939704962", ",", 
     "69343110686530", ",", "69343281688205", ",", "69343451688302", ",", 
     "69343622706523", ",", "69343793724073", ",", "69343963688957", ",", 
     "69344134702941", ",", "69344305713542", ",", "69344475688840", ",", 
     "69344646713426", ",", "69344817689956", ",", "69344987706605", ",", 
     "69345158707316", ",", "69345329722817", ",", "69345499688968", ",", 
     "69345670688769", ",", "69345841688726", ",", "69346011723380", ",", 
     "69346182689096", ",", "69346353684167", ",", "69346523684138", ",", 
     "69346694688457", ",", "69346865688937", ",", "69347035688788", ",", 
     "69347206712517", ",", "69347377704418", ",", "69347548688413", ",", 
     "69347718710972", ",", "69347889728443", ",", "69348060702838", ",", 
     "69348230706603", ",", "69348401711335", ",", "69348572701422", ",", 
     "69348742717166", ",", "69348913728644", ",", "69349084701741", ",", 
     "69349254725417", ",", "69349425719997", ",", "69349596726696", ",", 
     "69349766706436", ",", "69349937726434", ",", "69350108684277", ",", 
     "69350278688867", ",", "69350449685667", ",", "69350620727997", ",", 
     "69350790726760", ",", "69350961688549", ",", "69351132713772", ",", 
     "69351302688334", ",", "69351473688741", ",", "69351644689377", ",", 
     "69351814708589", ",", "69351985724156", ",", "69352156691814", ",", 
     "69352326707069", ",", "69352497683491", ",", "69352668708385", ",", 
     "69352838707603", ",", "69353009688277", ",", "69353180700115", ",", 
     "69353350724909", ",", "69353521702890", ",", "69353692688536", ",", 
     "69353862707560", ",", "69354033689137", ",", "69354204712470", ",", 
     "69354374686821", ",", "69354545721072", ",", "69354716709576", ",", 
     "69354886705390", ",", "69355057686959", ",", "69355228725718", ",", 
     "69355398697172", ",", "69355569688550", ",", "69355740710511", ",", 
     "69355910712070", ",", "69356081688225", ",", "69356252689263", ",", 
     "69356422699561", ",", "69356593698626", ",", "69356764688560", ",", 
     "69356934688677", ",", "69357105688582", ",", "69357276688736", ",", 
     "69357447688447", ",", "69357617728640", ",", "69357788688551", ",", 
     "69357959698540", ",", "69358129713086", ",", "69358300724676", ",", 
     "69358471702837", ",", "69358641706914", ",", "69358812724854", ",", 
     "69358983688231", ",", "69359153688640", ",", "69359324724305", ",", 
     "69359495688847", ",", "69359665691686", ",", "69359836724270", ",", 
     "69360007691129", ",", "69360177718273", ",", "69360348689299", ",", 
     "69360519688831", ",", "69360689689005", ",", "69360860727038", ",", 
     "69361031712430", ",", "69361201703131", ",", "69361372689474", ",", 
     "69361543723004", ",", "69361713688534", ",", "69361884722679", ",", 
     "69362055688475", ",", "69362225702931", ",", "69362396713067", ",", 
     "69362567712586", ",", "69362737689078", ",", "69362908688649", ",", 
     "69363079725021", ",", "69363249724481", ",", "69363420724927", ",", 
     "69363591689356", ",", "69363761726255", ",", "69363932702555", ",", 
     "69364103707214", ",", "69364273688524", ",", "69364444712460", ",", 
     "69364615684513", ",", "69364785688881", ",", "69364956688309", ",", 
     "69365127691715", ",", "69365297706659", ",", "69365468689343", ",", 
     "69365639688749", ",", "69365809723345", ",", "69365980688766", ",", 
     "69366151712390", ",", "69366321690704", ",", "69366492720864", ",", 
     "69366663688978", ",", "69366833685736", ",", "69367004688683", ",", 
     "69367175691533", ",", "69367346720598", ",", "69367516730823", ",", 
     "69367687725781", ",", "69367858689786", ",", "69368028691234", ",", 
     "69368199688736", ",", "69368370710597", ",", "69368540722582", ",", 
     "69368711703035", ",", "69368882707495", ",", "69369052712472", ",", 
     "69369223703089", ",", "69369394710370", ",", "69369564689253", ",", 
     "69369735688789", ",", "69369906684830", ",", "69370076724715", ",", 
     "69370247696977", ",", "69370418715577", ",", "69370588712206", ",", 
     "69370759712622", ",", "69370930688465", ",", "69371100688493", ",", 
     "69371271728052", ",", "69371442712375", ",", "69371612700458", ",", 
     "69371783712102", ",", "69371954725270", ",", "69372124688806", ",", 
     "69372295726628", ",", "69372466688500", ",", "69372636688901", ",", 
     "69372807697470", ",", "69372978688537", ",", "69373148718634", ",", 
     "69373319724733", ",", "69373490689418", ",", "69373660710113", ",", 
     "69373831717790", ",", "69374002702271", ",", "69374172688444", ",", 
     "69374343725392", ",", "69374514724109", ",", "69374684725801", ",", 
     "69374855688214", ",", "69375026710720", ",", "69375196690282", ",", 
     "69375367686814", ",", "69375538688459", ",", "69375708688880", ",", 
     "69375879711208", ",", "69376050721480", ",", "69376220702982", ",", 
     "69376391721989", ",", "69376562710725", ",", "69376733688681", ",", 
     "69376903736233", ",", "69377074694724", ",", "69377245688444", ",", 
     "69377415711966", ",", "69377586717550", ",", "69377757689166", ",", 
     "69377927725368", ",", "69378098772974", ",", "69378269698900", ",", 
     "69378439719645", ",", "69378610773225", ",", "69378781688765", ",", 
     "69378951686607", ",", "69379122689018", ",", "69379293718728", ",", 
     "69379463692605", ",", "69379634725694", ",", "69379805688977", ",", 
     "69379975719144", ",", "69380146688154", ",", "69380317706853", ",", 
     "69380487706068", ",", "69380658684110", ",", "69380829725486", ",", 
     "69380999688447", ",", "69381170706308", ",", "69381341688713", ",", 
     "69381511688768", ",", "69381682690493", ",", "69381853713129", ",", 
     "69382023688835", ",", "69382194724163", ",", "69382365723946", ",", 
     "69382535688756", ",", "69382706722371", ",", "69382877710295", ",", 
     "69383047719925", ",", "69383218705277", ",", "69383389715008", ",", 
     "69383559713290", ",", "69383730713114", ",", "69383901711766", ",", 
     "69384071724913", ",", "69384242707071", ",", "69384413714475", ",", 
     "69384583724591", ",", "69384754688502", ",", "69384925724959", ",", 
     "69385095713080", ",", "69385266707392", ",", "69385437708809", ",", 
     "69385607688582", ",", "69385778723491", ",", "69385949729174", ",", 
     "69386119725101", ",", "69386290691432", ",", "69386461711303", ",", 
     "69386632726104", ",", "69386802688195", ",", "69386973691249", ",", 
     "69387144723385", ",", "69387314689517", ",", "69387485711973", ",", 
     "69387656702984", ",", "69387826702873", ",", "69387997706747", ",", 
     "69388168689222", ",", "69388338705540", ",", "69388509715670", ",", 
     "69388680723945", ",", "69388850688752", ",", "69389021703330", ",", 
     "69389192721820", ",", "69389362711970", ",", "69389533717379", ",", 
     "69389704711888", ",", "69389874690644", ",", "69390045711988", ",", 
     "69390216725423", ",", "69390386703015", ",", "69390557703036", ",", 
     "69390728696620", ",", "69390898690400", ",", "69391069690396", ",", 
     "69391240688835", ",", "69391410718821", ",", "69391581688646", ",", 
     "69391752688847", ",", "69391922712498", ",", "69392093688907", ",", 
     "69392264706759", ",", "69392434703181", ",", "69392605722708", ",", 
     "69392776723757", ",", "69392946712180", ",", "69393117688525", ",", 
     "69393288723606", ",", "69393458771209", ",", "69393629703009", ",", 
     "69393800688412", ",", "69393970707185", ",", "69394141689151", ",", 
     "69394312708390", ",", "69394482723432", ",", "69394653712435", ",", 
     "69394824702910", ",", "69394994691912", ",", "69395165727642", ",", 
     "69395336688937", ",", "69395506689410", ",", "69395677711906", ",", 
     "69395848685593", ",", "69396018712926", ",", "69396189727994", ",", 
     "69396360716991", ",", "69396531711171", ",", "69396701688706", ",", 
     "69396872705808", ",", "69397043726635", ",", "69397213718900", ",", 
     "69397384722705", ",", "69397555688219", ",", "69397725690761", ",", 
     "69397896725889", ",", "69398067688541", ",", "69398237704486", ",", 
     "69398408707823", ",", "69398579703127", ",", "69398749712007", ",", 
     "69398920723826", ",", "69399091684279", ",", "69399261719583", ",", 
     "69399432725832", ",", "69399603689011", ",", "69399773691567", ",", 
     "69399944717589", ",", "69400115691761", ",", "69400285723365", ",", 
     "69400456691635", ",", "69400627713520", ",", "69400797729376", ",", 
     "69400968688239", ",", "69401139689174", ",", "69401309723493", ",", 
     "69401480684177", ",", "69401651689029", ",", "69401821688593", ",", 
     "69401992688691", ",", "69402163725324", ",", "69402333688919", ",", 
     "69402504737053", ",", "69402675721835", ",", "69402845704381", ",", 
     "69403016710491", ",", "69403187702209", ",", "69403357712349", ",", 
     "69403528724651", ",", "69403699691264", ",", "69403869713110", ",", 
     "69404040689114", ",", "69404211711710", ",", "69404381694290", ",", 
     "69404552724869", ",", "69404723711568", ",", "69404893691446", ",", 
     "69405064727493", ",", "69405235720735", ",", "69405405689648", ",", 
     "69405576724445", ",", "69405747713344", ",", "69405918703288", ",", 
     "69406088689272", ",", "69406259689990", ",", "69406430688212", ",", 
     "69406600707162", ",", "69406771711777", ",", "69406942684317", ",", 
     "69407112709962", ",", "69407283712598", ",", "69407454701868", ",", 
     "69407624711469", ",", "69407795720779", ",", "69407966688437", ",", 
     "69408136725738", ",", "69408307720270", ",", "69408478702442", ",", 
     "69408648720802", ",", "69408819715826", ",", "69408990698592", ",", 
     "69409160688644", ",", "69409331725625", ",", "69409502707196", ",", 
     "69409672713448", ",", "69409843684354", ",", "69410014684502", ",", 
     "69410184688310", ",", "69410355688742", ",", "69410526719584", ",", 
     "69410696702716", ",", "69410867688450", ",", "69411038726169", ",", 
     "69411208688624", ",", "69411379720158", ",", "69411550691190", ",", 
     "69411720706105", ",", "69411891698581", ",", "69412062702363", ",", 
     "69412232702484", ",", "69412403712940", ",", "69412574691924", ",", 
     "69412744702401", ",", "69412915719990", ",", "69413086728462", ",", 
     "69413256708456", ",", "69413427703322", ",", "69413598719084", ",", 
     "69413768710785", ",", "69413939724165", ",", "69414110707996", ",", 
     "69414280698839", ",", "69414451702951", ",", "69414622699681", ",", 
     "69414792684955", ",", "69414963690239", ",", "69415134712579", ",", 
     "69415304704553", ",", "69415475688569", ",", "69415646707165", ",", 
     "69415817695282", ",", "69415987702850", ",", "69416158690635", ",", 
     "69416329711112", ",", "69416499712280", ",", "69416670688639", ",", 
     "69416841703017", ",", "69417011688878", ",", "69417182688306", ",", 
     "69417353740472", ",", "69417523727176", ",", "69417694698599", ",", 
     "69417865691497", ",", "69418035707344", ",", "69418206689411", ",", 
     "69418377718916", ",", "69418547698477", ",", "69418718689058", ",", 
     "69418889696992", ",", "69419059726960", ",", "69419230688600", ",", 
     "69419401689684", ",", "69419571726745", ",", "69419742688668", ",", 
     "69419913713567", ",", "69420083720186", ",", "69420254713616", ",", 
     "69420425708048", ",", "69420595724700", ",", "69420766690797", ",", 
     "69420937688699", ",", "69421107724067", ",", "69421278706151", ",", 
     "69421449688568", ",", "69421619690539", ",", "69421790721588", ",", 
     "69421961685293", ",", "69422131688802", ",", "69422302696062", ",", 
     "69422473688790", ",", "69422643691623", ",", "69422814708071", ",", 
     "69422985689241", ",", "69423155702688", ",", "69423326704417", ",", 
     "69423497707442", ",", "69423667688852", ",", "69423838708379", ",", 
     "69424009688807", ",", "69424179700222", ",", "69424350707616", ",", 
     "69424521691207", ",", "69424691697582", ",", "69424862726463", ",", 
     "69425033724445", ",", "69425204702904", ",", "69425374712704", ",", 
     "69425545725336", ",", "69425716702121", ",", "69425886726282", ",", 
     "69426057727509", ",", "69426228702920", ",", "69426398727291", ",", 
     "69426569725126", ",", "69426740688919", ",", "69426910707553", ",", 
     "69427081726364", ",", "69427252715817", ",", "69427422704183", ",", 
     "69427593714396", ",", "69427764718391", ",", "69427934731655", ",", 
     "69428105723327", ",", "69428276689141", ",", "69428446703099", ",", 
     "69428617724354", ",", "69428788705428", ",", "69428958702835", ",", 
     "69429129690835", ",", "69429300690812", ",", "69429470702716", ",", 
     "69429641697073", ",", "69429812704271", ",", "69429982702051", ",", 
     "69430153700344", ",", "69430324711972", ",", "69430494721894", ",", 
     "69430665707537", ",", "69430836711625", ",", "69431006718515", ",", 
     "69431177721064", ",", "69431348711959", ",", "69431518711889", ",", 
     "69431689688796", ",", "69431860717771", ",", "69432030707273", ",", 
     "69432201688668", ",", "69432372711124", ",", "69432542691504", ",", 
     "69432713697337", ",", "69432884689375", ",", "69433054688593", ",", 
     "69433225688609", ",", "69433396720860", ",", "69433566707282", ",", 
     "69433737691290", ",", "69433908700128", ",", "69434078712448", ",", 
     "69434249733004", ",", "69434420713349", ",", "69434590690037", ",", 
     "69434761721928", ",", "69434932688806", ",", "69435103708074", ",", 
     "69435273683965", ",", "69435444689387", ",", "69435615711846", ",", 
     "69435785720659", ",", "69435956688609", ",", "69436127699010", ",", 
     "69436297710522", ",", "69436468698758", ",", "69436639711683", ",", 
     "69436809688729", ",", "69436980688638", ",", "69437151700571", ",", 
     "69437321688682", ",", "69437492703067", ",", "69437663689966", ",", 
     "69437833724570", ",", "69438004727571", ",", "69438175688376", ",", 
     "69438345691652", ",", "69438516712404", ",", "69438687724636", ",", 
     "69438857707482", ",", "69439028710920", ",", "69439199698739", ",", 
     "69439369726879", ",", "69439540709998", ",", "69439711706069", ",", 
     "69439881704565", ",", "69440052713482", ",", "69440223698155", ",", 
     "69440393689145", ",", "69440564689278", ",", "69440735703172", ",", 
     "69440905704920", ",", "69441076701376", ",", "69441247688745", ",", 
     "69441417716463", ",", "69441588708015", ",", "69441759725403", ",", 
     "69441929708626", ",", "69442100684902", ",", "69442271704484", ",", 
     "69442441702742", ",", "69442612691915", ",", "69442783691588", ",", 
     "69442953704334", ",", "69443124688295", ",", "69443295696869", ",", 
     "69443465688383", ",", "69443636727292", ",", "69443807702758", ",", 
     "69443977688783", ",", "69444148724591", ",", "69444319713795", ",", 
     "69444490722981", ",", "69444660723597", ",", "69444831697385", ",", 
     "69445002709348", ",", "69445172709944", ",", "69445343689102", ",", 
     "69445514724486", ",", "69445684691635", ",", "69445855712377", ",", 
     "69446026703012", ",", "69446196705728", ",", "69446367710261", ",", 
     "69446538688906", ",", "69446708688632", ",", "69446879688480", ",", 
     "69447050707688", ",", "69447220718087", ",", "69447391698082", ",", 
     "69447562703996", ",", "69447732688893", ",", "69447903725461", ",", 
     "69448074689246", ",", "69448244684717", ",", "69448415691041", ",", 
     "69448586723509", ",", "69448756683760", ",", "69448927724700", ",", 
     "69449098727014", ",", "69449268688540", ",", "69449439794186", ",", 
     "69449610704333", ",", "69449780703311", ",", "69449951727911", ",", 
     "69450122728880", ",", "69450292713081", ",", "69450463709103", ",", 
     "69450634720479", ",", "69450804688407", ",", "69450975715064", ",", 
     "69451146719972", ",", "69451316707057", ",", "69451487720988", ",", 
     "69451658726335", ",", "69451828709735", ",", "69451999684319", ",", 
     "69452170718036", ",", "69452340705753", ",", "69452511688532", ",", 
     "69452682722540", ",", "69452852710823", ",", "69453023703126", ",", 
     "69453194684460", ",", "69453364691883", ",", "69453535688659", ",", 
     "69453706703034", ",", "69453876690684", ",", "69454047691390", ",", 
     "69454218714567", ",", "69454389691844", ",", "69454559708279", ",", 
     "69454730691865", ",", "69454901728090", ",", "69455071721240", ",", 
     "69455242689931", ",", "69455413680906", ",", "69455583713887", ",", 
     "69455754688713", ",", "69455925713034", ",", "69456095727141", ",", 
     "69456266688798", ",", "69456437725983", ",", "69456607708015", ",", 
     "69456778688784", ",", "69456949712022", ",", "69457119718983", ",", 
     "69457290689111", ",", "69457461692061", ",", "69457631711957", ",", 
     "69457802712011", ",", "69457973694544", ",", "69458143727953", ",", 
     "69458314703130", ",", "69458485715136", ",", "69458655688770", ",", 
     "69458826702582", ",", "69458997726290", ",", "69459167693800", ",", 
     "69459338689192", ",", "69459509695778", ",", "69459679711580", ",", 
     "69459850689108", ",", "69460021689871", ",", "69460191725066", ",", 
     "69460362702866", ",", "69460533707693", ",", "69460703689042", ",", 
     "69460874690163", ",", "69461045703693", ",", "69461215706023", ",", 
     "69461386696906", ",", "69461557683903", ",", "69461727715763", ",", 
     "69461898721887", ",", "69462069704043", ",", "69462239693084", ",", 
     "69462410723752", ",", "69462581690305", ",", "69462751713926", ",", 
     "69462922698552", ",", "69463093706573", ",", "69463263713494", ",", 
     "69463434708135", ",", "69463605686684", ",", "69463775711397", ",", 
     "69463946725396", ",", "69464117713611", ",", "69464288688607", ",", 
     "69464458691454", ",", "69464629704084", ",", "69464800698785", ",", 
     "69464970689166", ",", "69465141689421", ",", "69465312688482", ",", 
     "69465482698826", ",", "69465653681722", ",", "69465824688657", ",", 
     "69465994716547", ",", "69466165717182", ",", "69466336688624", ",", 
     "69466506691353", ",", "69466677691928", ",", "69466848729180", ",", 
     "69467018725058", ",", "69467189692157", ",", "69467360727694", ",", 
     "69467530708489", ",", "69467701685783", ",", "69467872711645", ",", 
     "69468042689307", ",", "69468213724258", ",", "69468384711167", ",", 
     "69468554688690", ",", "69468725721668", ",", "69468896718910", ",", 
     "69469066703745", ",", "69469237690498", ",", "69469408703030", ",", 
     "69469578698597", ",", "69469749681661", ",", "69469920712434", ",", 
     "69470090722554", ",", "69470261713503", ",", "69470432723470", ",", 
     "69470602688546", ",", "69470773685410", ",", "69470944795555", ",", 
     "69471114772697"}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6282624232323303`*^9, 3.628262427872674*^9}, 
   3.628263224994409*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xin", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"xin", ",", 
      RowBox[{"-", "20"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"end", " ", "is", " ", "always", " ", "a", " ", "mess"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.624426260871375*^9, 3.6244262742099953`*^9}}],

Cell["\<\
48 kHz
alternateFrameSize is 592 
inputSize= 592 multFactor= 12
outputSize= 588 multFactor= 12
new bufferSize = 98304 numSamplesInBuffer = 8192
\
\>", "Text",
 CellChangeTimes->{{3.628262539118013*^9, 3.628262580270722*^9}, {
  3.628267494022138*^9, 3.62826749789126*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bufsize", "=", "8192"}], ";"}]], "Input",
 CellChangeTimes->{{3.624419449905155*^9, 3.6244194643212347`*^9}, 
   3.62441973044341*^9, 3.628271187477441*^9, 3.628271350560584*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rate", "=", "48000"}], ";"}]], "Input",
 CellChangeTimes->{{3.628271220508048*^9, 3.628271225922784*^9}, {
  3.628271294289394*^9, 3.62827129492738*^9}, {3.628271353238493*^9, 
  3.62827135407757*^9}}],

Cell[CellGroupData[{

Cell["Expected time between wraps in ns", "Subsubsection",
 CellChangeTimes->{{3.624419525733382*^9, 3.624419542246935*^9}, {
  3.62441966390735*^9, 3.6244196651072683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Texpected", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["10", "9"], 
    RowBox[{"bufsize", " ", "/", "rate"}]}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.624419425235463*^9, 3.624419429473353*^9}, {
   3.6244194754006853`*^9, 3.624419516207485*^9}, {3.624419654276443*^9, 
   3.624419662108684*^9}, {3.624425953995131*^9, 3.624425954368856*^9}, 
   3.6244413412032146`*^9, {3.628271264817564*^9, 3.628271266816453*^9}, {
   3.628271299673264*^9, 3.628271300038752*^9}}],

Cell[BoxData["1.7066666666666666`*^8"], "Output",
 CellChangeTimes->{
  3.624419589510412*^9, 3.624419667756673*^9, 3.6244201891317244`*^9, {
   3.6244207512309103`*^9, 3.624420767915951*^9}, {3.624421003934783*^9, 
   3.6244210243707123`*^9}, {3.6244211448045197`*^9, 3.624421163758091*^9}, {
   3.62442159729119*^9, 3.624421619290565*^9}, 3.624421694068947*^9, {
   3.624422017516767*^9, 3.6244220388354*^9}, 3.624422250817603*^9, 
   3.624422328112216*^9, 3.624422650626433*^9, 3.6244228714573803`*^9, {
   3.624422902229334*^9, 3.6244229273652897`*^9}, {3.624422978674624*^9, 
   3.624422999710765*^9}, 3.6244230309650993`*^9, 3.624423162650988*^9, {
   3.624423233411565*^9, 3.62442326894928*^9}, 3.6244233881837473`*^9, 
   3.6244244467721767`*^9, 3.624424484495049*^9, 3.624424647651368*^9, {
   3.624424745965218*^9, 3.624424758418624*^9}, 3.62442479783986*^9, {
   3.624425099901869*^9, 3.624425117202722*^9}, 3.6244251475079393`*^9, 
   3.6244253267688503`*^9, {3.6244255947907352`*^9, 3.624425625545624*^9}, 
   3.6244256870541973`*^9, 3.624425954876588*^9, 3.6244262763743*^9, 
   3.624432416912511*^9, 3.624432550367741*^9, 3.624432622104637*^9, 
   3.6244352692868643`*^9, 3.624435361573452*^9, 3.624435713516026*^9, 
   3.624435912256472*^9, 3.624436663979088*^9, 3.624436761880579*^9, {
   3.624436856784205*^9, 3.624436877501225*^9}, 3.6244370392395287`*^9, 
   3.624437071291011*^9, 3.624437299797662*^9, 3.624437431901072*^9, 
   3.624437490586545*^9, 3.624437632757044*^9, 3.624437668325657*^9, {
   3.62443777644483*^9, 3.624437815879794*^9}, 3.624437850129917*^9, {
   3.624438125038486*^9, 3.624438149856172*^9}, {3.624438451530834*^9, 
   3.624438491233205*^9}, {3.624438548867087*^9, 3.6244385609678593`*^9}, {
   3.6244406859680223`*^9, 3.6244407019045763`*^9}, {3.6244407427369833`*^9, 
   3.624440766637054*^9}, 3.62444086795725*^9, 3.624440981643507*^9, 
   3.6244410527126102`*^9, {3.624441108947345*^9, 3.624441155464445*^9}, 
   3.6244411970174017`*^9, {3.624441279003552*^9, 3.624441356789233*^9}, {
   3.624441389088464*^9, 3.624441421156475*^9}, 3.6244417854015617`*^9, 
   3.6244418751705637`*^9, 3.62444195495674*^9, 3.624442583324604*^9, {
   3.624442632442322*^9, 3.6244426495261908`*^9}, 3.62444270182803*^9, 
   3.6244430124192657`*^9, 3.624443061738093*^9, 3.62444309903942*^9, 
   3.624443157607171*^9, {3.62444330071015*^9, 3.6244433211628*^9}, 
   3.624443466766616*^9, 3.624453484581334*^9, 3.624453585428063*^9, 
   3.624453743082219*^9, {3.6244541814222918`*^9, 3.624454199125243*^9}, 
   3.624454298165071*^9, 3.624454356671773*^9, {3.624454736654583*^9, 
   3.624454763549074*^9}, 3.624454801960774*^9, 3.624457520233261*^9, 
   3.624457550927504*^9, {3.624457595283434*^9, 3.624457619302594*^9}, 
   3.62445770019691*^9, 3.624457873852758*^9, 3.6244580028072433`*^9, 
   3.6244640283771772`*^9, 3.6244640896513844`*^9, 3.624464179761372*^9, 
   3.624464350164803*^9, 3.624537078345025*^9, 3.6245373378115177`*^9, 
   3.624537410180574*^9, 3.6245375695565357`*^9, 3.624540873531074*^9, 
   3.6245409220192547`*^9, 3.624645334287746*^9, 3.624645529355926*^9, 
   3.6282624325445843`*^9, 3.6282678134265957`*^9, 3.628270267110468*^9, {
   3.6282712673889236`*^9, 3.628271300389035*^9}, {3.62827135650756*^9, 
   3.6282713745402*^9}, 3.628271576330214*^9, 3.6282720624260893`*^9, 
   3.628570870211187*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
CHECK We may want to skip the first frames is this is happening consistently\
\>", "Section",
 CellChangeTimes->{{3.624457970270033*^9, 3.62445798354055*^9}}],

Cell[CellGroupData[{

Cell["\<\
If we start at the wrong moment, where the timing is off from the main pulse, \
the filter has to adjust to get into the beat.
  Apparently the first beats are off the main beat. This makes huge \
difference in max error/drift after fitlering. \
\>", "Subsubsection",
 CellChangeTimes->{{3.624464842780971*^9, 3.624464853401495*^9}, {
  3.624465615176457*^9, 3.6244656883320093`*^9}, {3.6245374280293503`*^9, 
  3.624537442667254*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xin", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"xin", ",", "5"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"test", ".", " ", "There"}], " ", "seems", " ", "a", " ", 
    "hickup", " ", "in", " ", "sample", " ", "3"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.62445785713883*^9, 3.624457872040666*^9}, {
   3.624457994576659*^9, 3.624457999332007*^9}, {3.624464176249028*^9, 
   3.624464177840173*^9}, {3.624537335323059*^9, 3.624537335513988*^9}, {
   3.624537406599399*^9, 3.624537406750454*^9}, {3.624537482964204*^9, 
   3.624537483154561*^9}, {3.624537557664036*^9, 3.624537566839409*^9}, 
   3.624645332092894*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"deltas", "=", 
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "6", " "}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"xin", ",", "1"}], "]"}], "-", 
      RowBox[{"Drop", "[", 
       RowBox[{"xin", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6244527945416517`*^9, 3.6244528243134003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{"deltas", ",", "20"}], "]"}], ",", 
   RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624540812482493*^9, 3.624540832510367*^9}, {
  3.6245408659750834`*^9, 3.624540958104958*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Kv+eta8s091gAo4lN2NniiRAONzOPhpSWX/
j4fxBRzOHb3/jcUBxhdxcJtVwf4DLi/hwLytWfA3nC/jwBvYau8MV6/gIPgn
X3U3XF7JoSqfh9EBbp+KwzxOX6HTcPeoOTg/+fL1D1y9hgOnyY0rP+F8LYfG
yIUe3+HqdRyu/fnhzQ03T8/hybfT6qvhfAOH2GVqB6Xh6g0dXhwoauFJhPGN
HKZ+fG+sBzff2CEzuLT/DVy9icNqlU38m4DmAQBWgVC+
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 170.},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.62454083587607*^9, {3.624540873167513*^9, 3.624540958635366*^9}, 
   3.6246453339568167`*^9, 3.624645529089719*^9, 3.628262432198612*^9, {
   3.6282713566742077`*^9, 3.628271374709099*^9}, 3.62827157649717*^9, 
   3.628272062543536*^9, 3.628570870300425*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"xin", "=", 
    RowBox[{"Take", "[", 
     RowBox[{"xin", ",", 
      RowBox[{"{", 
       RowBox[{"200", ",", "220"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", "testing", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6244229619037113`*^9, 3.624422977182746*^9}, {
  3.624423160155542*^9, 3.624423160491208*^9}, {3.6244232309228992`*^9, 
  3.6244232673847837`*^9}, {3.624423384007423*^9, 3.6244233863339453`*^9}, {
  3.624424482535603*^9, 3.624424482727302*^9}, {3.624435348460911*^9, 
  3.624435353305387*^9}, {3.624435909279686*^9, 3.624435910725823*^9}, {
  3.6244362320834503`*^9, 3.6244362322466908`*^9}, {3.624436662729794*^9, 
  3.624436662866106*^9}, {3.624441385516851*^9, 3.624441385690896*^9}, {
  3.6244418728387403`*^9, 3.624441874213805*^9}, {3.624442700481632*^9, 
  3.624442700647181*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"deltas", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<wrap\>\"", ",", "\"\<dt(ms)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624384358483335*^9, 3.6243844149813347`*^9}, {
  3.624384453318426*^9, 3.624384633863554*^9}, {3.6244196786469107`*^9, 
  3.624419680707993*^9}, {3.6244200826995296`*^9, 3.624420085267754*^9}, {
  3.624420973338192*^9, 3.6244209748254843`*^9}, {3.624421605678418*^9, 
  3.6244216084206676`*^9}, {3.6244237282563353`*^9, 3.624423730303809*^9}, {
  3.624426123327709*^9, 3.624426123525956*^9}, {3.6244525249947233`*^9, 
  3.624452528199924*^9}, {3.62445282836375*^9, 3.624452830773417*^9}, {
  3.624452968250143*^9, 3.624452968360071*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxVWnlcztn3zzLK2MoSYZSxJSRFIqZ32UJok6R4Wmivp32vZ1/6DsqaPQxl
z5JdsodBssVYsiV7lpL998zM7/P2mv7p9Xnuufeec895n+3e7gHR7rMb6+np
eTXR0/v7/79/tQ6pX8env3KYjf//AYl3ZuR2EgnfBphs0Tn8+yzh2xAXT92r
bwrhuz3GLk/Wb+B4JzTZKzf6zO+uaOWmdBhFejMYfYnudYjjvyI1umUjcL+e
WN18Utvz5Kc3Rj16X/eF9OZoPrjy6kd+W0A6fa3zB9L3x/UvDRNbcD1LPKo/
32cLv63gt7H3sS6kH4Sa0lhFS3/h2xqL37y2seT6Ngj1SJj/gvSDsaXnrja7
uN4QXPO7+VMTftti5T2ry/mkH4pVH77HHOd6duhZ7Go9jPTDsHRb3ZjjpB+O
i3OfNj/PcXtURGp9xZw/AgmJ1nbnOD4SYwJfvn7xm/D9G5yeJdZ3oDwOSL92
TnFvpvANdGg0+XWAoA8JMCv1c5wb13NERdmTDlOE/SSOeCyybdSM+nOCaIRc
9Y3jTrD/fE7+nvNHwXrbpMA0QR7JKFzL7bGqEcdHozRt3Fwt549GwcKIhANc
fwyaf05sayTQS8ZgmoPt2TaUfyyuJRRu7En+x2JrXMuyuxwfh6q15uUFnD8O
vU2GtUjj+s74VP5T3QCOO+Nnw59sepO/8eixdsATd/I/Hs92DmhyketPQN3+
6OLJnD8B3582+/kw9TcRnRvcWqVRvolYdctkoy314YKQGReGP+T6Lshqu8b+
GPUzCff7tM6fJdBLJiH8tcfUGq4/GZr+FScPCfSSyTixv8vocK4/BZPad084
JNiDZAo8C6MsqS89V6wMG/DncYF/uOJsUfbQXeTHFf4nf2u0SKAvdYV+pueJ
H/PdUD/6htLUUZjvhiXd5yW8obxu6Flh+20057vB4Hxl+QWevzsaPCenTRDG
4Y7XZd6RP+zJHR3nrF3lIdCXuuPNygFmg7m/B6KMBxo3I/8eGHmt+1D6F4kH
FppE9zsijJd6oHGblmZfeL6eqH7q63ZOoIcn1j99EVTL/T2xf3ue0Uzy74kW
FpszN5D/qTAff8PlN/I/FX8u2Zotpj1MhZv1sGIb8j8V8VfmrCS/el7oE+Fg
8pDzveCxsKrVU56/FyIM5p23I/9eKPnrcIw75Z+G4H1LztZS/mlo6tV6gDXl
n4aMot9b3RHkLZ2G40cNOtvQPrzh5OCx4y9hP3jjuCajsTn598aQ1CF4Svm9
YXowv+Qx/ct0SJPePh0krIfpMPxtUchZ2uN0TH6xNqO/YB+l09Hn6Jg+E8m/
D5ZcVAc3J/8++H181kAl+fdBlvHEXOqr1AdmKx6N++H/Z8D+8eW5VrS/GRi7
a1zhMupvBorvNL1HeymdAT/V9/gm1J8votY3OvwT+fdF+SrR9zry7wuni5+/
25F/X2ywNDlTRvvxQ+DY5LQc8u+HKxO650wk/37YfOC2yJz7+6F48D6nSvI/
E0WJ7Z+Yk/+ZmLHoplk78j8TKwuGP6rm/JnImnS9UE3+Z2HF9ImNQmk/s2B0
5uD+VtTfLGSkRpzXo/3NwtCHg0cvpv2JEC1temq+8G0mwv1WoZ5Vgn4hgs+1
BfNihXGRCMe1NTe8uL4IXod6/zFEsJ980b/6p72K0GTXjUMOAn9VIswoTwvU
kH9/PB/a7spP3N8fpxq9/5zJ8/THyyxJ8TOBH5E/nIo2z/zhH/yhN7diA/OR
fH+sXrznQRfqyx8WBSN7PRH0VeUPr7E91tzg+Qdgeonlie8C/2YBaJm8zL8H
9w/AlubrXjGeiwLw2l515hvxGYDau26B9J/5AbiWZlFwhPoKwPZWHR6mU/4A
iJ5svLCf8gei655ppj/OPxDTXSJ+Y76BQFR8Pn2jm0AvCsTVPgdOMD5JAmG/
8dW57ZQ/EEnr53+UUN+BeO/RVX+mQF8ViJJbbit7UP4gBO/t9/6YQG8WhIGF
0cuucP8gTBlZUWVL+YNQ6L5b34fyB0GTVVmxnvIHIa3ed+NG4jUI4vSXy3oJ
61cF4VH7X84+5v6zkbwn5qSPgD+z2Zi3veJOHf3RbDxYdODjaWE93T6RTZLy
L1L+2Vh0ZMPKgbS/2TBMzJ5KfZXORkj12SG0r6rZ6FKfFrCK5z8Hu9P9VFk8
/zm4VF/T6oOwH+Zg6IlWDek8/zn4ef30m/T3kjk4lCZ5xfwsfw4C3zbL+yjw
UzoHNsfE2/2p/zkY/FeHTyLiLxiBQWe7nuf5B0MSeGk1/SOCcedlami28C0K
xq3hdpUr6F+CMdCqX3viPz8Yfl8rex6l/MGY86nXgwECP1XBmLVi7uJO9P8h
ePitx5W1wnyzEJz0dS++w/MPwXy7oCZcXxSCNdvk8pHMR0Jg9XZXb2Oefwgs
vvvMPED7D4GNybwnu3n+IUgsTTjVkucfisTOoZtGcP9Q7GlUKTEg/kLx18Zk
X0+efyiku/pOY30hCYXPHKPsbZQ/FPMe+9X98HehiBh1yo7+oSoU17vVO/3I
P8MQqwtQX7l/GKpzrjqNpz8Ow6jGY5fuo/2FwT477irzY0kYBo/v3zdJ2C8/
DCV3v74h3krDYNbHpdMk7h+GycXGc7pT/nBM6FtTv4D2F47vS/S+XKH9haPB
5vB0xitROBa1e2nRk+cfjnM2A9WM7/nhqFGUO3ak/OF4fX7Zy58F+qpwfOk8
XlbL+BWBFs07+d2l/UWgs3W3DW1pfxE4HaqxYLwVReCJ9klEI9pfBIJnf84Z
KqyfH4Ht+y54aqj/CGwOXFyxm/YXgej3g0xziP9IPN8m3daW+I9ExaZ+a5hf
IBKTJjju6yiMiyIR69HkAv25JBJBTyIjEnn+uu+cQwYePP9I+Hcc04b8V0Wi
bFnvCAfmz1GoF7mnc9wsCjsurazry3wgCmbF2oWfBXpRFBDpWUD/IolCy3OD
l9/m+UfBouzSWEvGnyjsC8i6OZL7R2H4orUWP+qL6H/i+xzGn2hM7h3V4STt
Pxpuax617sLzj8bJnr5lPXj+0Vh1PdKV9XV+NNQe1dVdKH80imquh6fS/0Zj
+/h9vWJ5/mKs3zbhV843FMOtbdtQxk8zMR4dWnTwkSCflRhXIrqpj5E/MRoH
950+WeDfVYx9ezq3/cB4IUaeie25T8J8sRg6dMc8ZvwQ48HCyT3ZX8gRY7bJ
A++O9KdibG59wOSV8F0kBtr5n/hRD+jWv22+67rAf7kYp5VNut9kvBdjbftt
t1sI9LViDE901T6n/DG41ehGB/onwxj43fezZD1sFoN054a7swR6K933aBdt
T8ofgyi16pS5QO8agwX2Eb/upr5iYN/Vb4O9QC+OgeaduLEH5Y/B0sfPrWl/
OTEY3EaUe4/61M33qDk8VtBHUQzy/rA+1ZX4isGi+maz8oT1y2Nws48k4BHx
FoMNLmEhtNfaGHwSmXQZTvljsStg/3D6S8NYzAkZYTSaeIxF+N63C7IofyxS
po0UrWZ8iMXw6hGBs4T1XWPh3s/lXjj1H4tlhnHjrwl4FsfCbl3a9SH0X7H4
6e7ZgjOCvnJi4T2izpn+Lj8WkyozrcdS/7FY17NnxV7KH4uN1z/PrRfoy3X8
7FTXD2K8iUWPkna77wrr18ais2q+ZhP9bxwufr328DfqPw5Gbi53JfQHcfCu
3nZwniCvVRwexC/YZkn/EIddq30y6gR61ziMXex/uxX9dRxu6k83/pP2H4cb
JZKZ++k/4lDrErLAW1g/Jw6+29otZT2YH4fEjeUpzOeL4hBaUB3L8ymNg+mB
IU/3Uv9xMGz8tpcn5Y/Dtrv3E0OE9Wvj8EdE7p4V9D/x6Nhy+4H1xH88Nq/y
D2P+YRYPyYpT/1MK9mcVj6mubnVbGJ/iYb31wdw/KX88FiwdsrOU8sfDqn9W
Cfsr4ngUGIhTOzJ+xyPvWKdc1j858fi6rulXJeNJPBSGOQPX+gnyx+OMUfgb
6q80HgZJwS/3CvTl8Th2Kruzi0BfFQ/d6bqzn1kbj4qT9qXtKH8CCs4HBLyj
/hMQZ2GiZ0F/nIDoFZsM2wjrWyVg5oG7tj/icwKCLpSZfSD+E/Ak2ql7Y+I/
AR8tN1guo/wJUE09nMv8UJKATfLD3VyI/wTcvnX8nTvlT4DPhCULywX8FCXg
wwx7N+YLpbr5k1bejqb/S0BM9bQ44rkqAUfcl3RvTfwn4Hx99+gDlD8RPobn
PtsJ/BgmwmnRwJDuxH8iTJo8t2O9ZZUI9xV2B+4xPieifs+JWe0EetdE3Ltz
ru0qyp+I1/cXPJws8CNOxP/uP9NjfiBJxIjKgH1T6P919Kc6vnzDfDIRVvur
53H/okTsb/xz3XviPxEu9x13hxP/iehjpYuIjLeJkNm7Foyg/Inw6HXurjvx
n4TehfdnVAr6NEzCoet3CywofxKKo1/toL+zSkIB5gRfZn6UhLYdNq9gf9k1
CaaGNS6sj0RJOLY59eMvwnriJCwO+mWeJfGfBNlpl3V3if8kzB311fIF84kk
xDySlq0j/pMwbeZbhxTqPwlX8wzjzgr6KE/CkxO7m5oQ/0k4k9/OSV/YvzYJ
l94VzGU9rZeMfjYb6vbR/pMxctZuX/pXs2RYeA7tyPrYKhmlT/0OmzL+JSN4
dGg0+9GuyTie7bGN/RtRMrZ69f7iTvtPxufzr86OovzJSPz2chftKScZ+/o4
RyQx/idjd99pyUspfzImKVpN2cH6KhmeJzKn9Kf/S0Z6hbYp69eqZMR4d25w
I/6TUVOy8uZ22n8KHu8e0SaK8qdg2fKm0c7EfwqaTfi5v54wbpUC1fCt4vPU
fwp03qfFBeY/KbBSrPzAekOUgrVSb9t3wrc4BeUWugNn/paCz8PFFw2I/xRs
bKXewPokPwW5tUeOsj4vSsEfrsYlrD9LUxCgnPEb/UF5ClKrAoseMP6nIM7F
+MMa2n8KBi15upT1lV4qCuPG9F1L/KdizcK7Q7m+WSpKE60CTOn/UtG92cF6
xgOkwvaC/eTLgr91TcXf4Z/4FqVCs/ba2WXEfyqMP9aNiiD+U3EzpcuKVcR/
KsycfIexP5+fii2LVj/dQPynwjInv2En5U/FvmLlkw0C/+WpmLdj5G7WR1Wp
uDv90MvjjP+p+Fb77t6P/l8aJjfXjGc8NkzDxJ3rY9ivM0sD1sc/vSfQW6Xh
efWD6DTafxre+TS/Q/5c03B+wkL3csqvm1+f+mGcwJ84DeO8Mk1+p/2n4e92
xGbKn4bHmep1pfR/uvHLm/oRb0VpyD24KuMx+ytpOPhXXUV7+r805Mw+dpL6
qtKND8htcZHyp6HrTuM1MsqfjsP21l6sFwzTkWV9Wn2T8qfj2q7iEmfKnw7j
KSMr2L9AOlq0eKV/WFjfNR2ibbeGdBfsQ5QOB8/Og2yI/3QM6X3St4L1Wzra
tXKvJf856cA94/7XaP/pONjheFh/6j8d6klB1Y1ZX6Vjar2fEfvD5Tp5avo5
/+g3pMPRUudBmf+no9nEhEY7WP9m/NNP1af8GRhy1bynCeufDEwcNuvFEdY/
GXDY7H+0D+XPwHjnPyK/EP8ZiJmuvEB/IcpAdreGTv3p/zNwK9byFPNhSQYi
Ul1ds4XxnIx/+ldy5n8Z6Nx5StMYYf2iDOwbs6yVNf1/Bry7BPY5zPiv47+l
qRHro6oMrKrreyaI+M9A1O2AzFeUPxNz3/jX72L+n4n0vCMR9tR/JgrMHLow
X7DKhHLvyonkB5mwW31J8onxLxN3v59pvpD2n4mRsi59Z9D+M3HxRHOXPsz/
MyEWxa4vo//LRFjdtamNaP+Z+GC6rDXjZ1EmZI0UbYi30kw87PLzGvZ/yjPR
w8XNci79XybyXI/dZ/+vNhMHFaOieT+ll4WJZfoj2U8zzMJYpxkXe7Efk4VN
xwa3NGX+k4Vz2sQOFQI9suBzoGNeB8qfBYdf5psUUv4sjM8/tvFH/pOFK1a6
CpL4z/pvvzEnC4kP7+QOEuwvPwtht04NZjwryoLE/+M75jelWTj6pjh4CfGf
BdW0BSPY367Kwp3d2y+z3q/Nwm0LjXQ7+x8STLc+85b1jIEESfWL9dnvM5Sg
y5ugoby/6iRB0Y6ETUa0Dwl++ftCWJDHXIKKqPeDTOkvJKi2b9Cy/rST4Mtm
38IvxI8E1+NHXk4Q+HGW4FSu/q//oz+VoMmrlG+DBf68JXi8IjLqT94HSHDW
a6lHY2E8RIIr4bt3sn8llqB5wU8D2f9IlqC9k74f798lEhici/zcTeBHI8Es
/2NfmT/nSCB1rCiYKoznSXDtKa57EJ8SqP93+8pUgb5QgtXJF415H1QkwWW/
tsFjhO/9EtzQiLr6Mn+RoOqw3ZtrwnplEuS7TjGVMp5L0GPS4Sa8T66UIOHC
oxWR9G8SuA7r/T/eL9dI0KaN/5c9zHck2GaVsaO7QN8gQe9urrY/+u9S9H/n
5acW6A2k6FU9fXw/+kMpcvuLGjM/7CRFdBsnlDA/kmLPNNM2GcJ65lKcTF3v
xX6ElRSP3mUXrBbG7aSoauPwfSTxI8W0S+NfrxDGnaX/+Ffe17tKUTgsJbe5
QO8tRcPJ4VOZn4ik+OnjzbIEgT5Eitv9Z/b/nf5G+t/+WLIUFd/0vbfQ/0ix
3md0+4UCvUaKtW93PO5AfyRFTFmzilPCd54UW6flXmY8yZciUFewEI+FUgxy
St7zhvqX4kvklBzW9/t18t1/cX0X8SvFzfIL3/jepUyKjRlxWcwPy6UoL3c4
dkrwD5VS5Bi53mf+ViVF/t3flw8U/EWNbr5zSVveT9ZKIbn+pYH3Ew1SGOS2
HGbL+C9DUZe9A84J/BjIYHSidWAF8S/D0MjTobyv6ySDONlx9DNhfTMZVl/p
X/6K+pdhTljbw4z/VjL8HU54PnYydD52uo71KmSYmJvey1BY31kGn7fJPt+o
fxkOO9zdcl3Yz1v3rV9T0pX1hQxDKtxT2F8L0c0/KIs8SfzLYDXRfgj74cky
FB9/f0RF/yv75z57tkCvkWFan2DzKOJfhnkXP/Zl/Zwng6PswRn2K/NlqCvR
OWBBv4Wy/+bbRTJskGVvZv9wvwwPEr7K/Ni/kOGjUuewqX8ZUgdfW5jCeCZD
gKH3sMECfaUMwy9VLn1B/cvwOOtt0mviXwanHQ5avteplUG/1tjZVZjfoBvX
pdfBzP/l6H1mVYUj9S/H9c4TXp5iPJTj6YrBrX4m/uVo36t7ri39vxxG34s2
nBHozeU4nLJ5FO3BSo4/HoYF3RD0ZyfH9wWeG/OIfzlOHFCZLBfWd5bjUIbX
sk30/3JMuXRoJ99PectxaY3tZvb3RXKYTjQ9aEb9y3Hr9JrCCMZbOdJbPD/N
92XJcqzQO/H2x/2BHDlWLb1jBXqNHC1HfOjG+jBHjqXdJtUFEf9ybDzQ4fgz
5idyeLUesIv9jkI52jacuMT6r0iO7l5ZCn9h/f1yzI85dYr9g1I5Ol5x+TCc
+pdjoq58eMl6Ro4In75N3wr0lXJ8rN/uyH5rlRzTrd6McxPWr5GjkZtVIO8L
a+U4P94844f/1623WBRjR/wrMOf9+vvthXEDBdZ7R4UWE/8KODW3iWT930mB
FP3kCifqX4FbWz/5vmT8V/zTP9vMfoECBdvTlwQT/4r/9hugwP09VWNmMf4r
sFy/qGwg8a9Awp8pp0uE+d6K/96vihRwfD23O/PtEAUiyxxsDJhvK3D82N2T
OQJ9sgLtRN7feB8vUeBst7VznBn/FTi97umLIOJfgQVJrWcXEv8KyIalfuF7
oHwFNrkM0nck/hUY4DgWfE9SpEDngu6bed+2XwHJoRc3WO+WKlBieSJruDC/
TPFvvcP4r4B++evPPK9KBd5521izHqtSYNiYcbEfhfVrFDCckTqY+UqtArNq
QyfPJP4VmLG089o1jP9K5GuL7odS/0o0+rtAZz9AiRFHzR1pz52UKFvqesyf
+bES/Q/WLWd/zFyJXUaaG4zHVkrkWNpu4/sxOyXeNtdV/OwfKP+9jyb+ldi8
3OxZCetJJRZ2GXO9M+O/8l/7Iv6VuPfNdzDrmxAleoriU+IY/5Vobt3Yoqsw
nqzE8fCltiupfyX2JP6lrCb+lRD/+qk4gfFfiUsDJ5TzPiZPiU+9Hmx7R/wr
0fXFpJbjhfULlfhV804sI/6VsOuwyWov478S5VefGzNfLlUiO+7q5RjiX4kt
PhVurRn/lXicvvPDA+Jfd76ye6o85vdKeNX+ZfiQ+Feirdbp/EHiX4mPYeNi
5hH/Siwvbp+TyPxf9c97Fd5PGqjwyDoqLJ/5nwqt7h0/yH5sJxWOr/t1cgHx
r8JQW3t33p+bq/D+D5ewEOb/KoyKObOCeLNToa3N5xG8z4EK18W5aQeJf9W/
/S32k1VQtkhpOpT4V8G+0SQF6zuRCi9XXfbqxfxfBbd1veaTP7EKedZiTKT+
VZiWVtniJ4E/iW68IG5MX8Z/FQL3D9cLoP9XYYzhk/t835ynwpE481FTiX8V
Cqbn32G/vFCFzC0JD96yX6/C83iz55uY/6v+7U/Q/6uwdvYdB2Nh/TIVOlYG
/sr6s1yFFVvd2rhR/yqUztQVKKxvdee5xv4Y++M1KkxI7eRD/1KrgvkqZyvW
Jw0qnA9O6eZL/Kvx9/MuK+Jfjb2r9o5VEP9q5MgKcvoJ8nVSo8mL9R6M52Zq
HFz//fEt4l+N4xsCL7LfY6WG5ynPT82F+XZqxHSbLDrI+wM1evUI9p8ijDur
4TXh0vu29P9qdPv7gatA762GdOb+OP9AQf9qbH+z7IWp0H8MUWPuy+J8vv8W
qxEaXavke7RkNZ497VHLfo9EDZPETgszmf+r0VGuDiXec9TYnWkzyI/+Xw2H
rj1HfxT4yVdjT/WZWbeIfzX+iK4YzPeTRWo87edss4T4V6Nia4Qp39OVqjH0
ZPIF1ltlavjdHtskmfFfjXnVZecGUv86+uytQ9qzv6c7jyXbRSsE+ho1nJq9
ffGj3ldj28c3S40F+gY1+qm2NPnxHl0Ds6V2b0uJfw0y5803Zrw21GDNGfNL
I5j/a9DYsmwJ60czDfr6zj9Of2+uox/R/+pyxn8N+txZUsb+i51u3GznHb7H
hQaOo8NujWH9p4GreOc6lbCfqwZ7b3prmQ97a6A663nMnO9BNNgPXUIu7Bei
wdFVoxXfed+qwbOmg414n5GsQeLv/SxbC/FHooHLpomnBxH/GgTFXRtxhvjX
YO17ZU4c8a9BszXVj1iP5Wvw1+281VbEvwZN42ddjBD4KdKgLGNLQgDzf903
VvuVUP8adAsf22wY8a/Bg1+qxrdg/q9BidUyC8bHSg3GbX79ZR3jvwYZ+g4x
zH9qNNhzpsVT3sfUavC7S+kOI0HeBg0+TJ+98cf7aS0C+4X40N8ZaP99/0v8
azGj+Z1ejE+dtHi2aNxQvnc00/4T7+sEPJhrEXzdHbeY/2uRe+XGuyHUvxYn
e1vHsX6GFovu/FkzjvrXQiI1A99Hu2oRe3SUm5nAv7cWL0qH9eB7cZEWoY/e
ZbMfG6LF+dVNbVmPibWonFBjyffFyVqkipOu875HosXSYX7G7Rj/tbB+PMqV
+W+OFo00h1IXM/5rsdpx1Pem7M9pYZhUZ8F+bKEWDrHhFax3i7So3jpl2Ebi
X4v23RPsP1P/WgxbMU+P/dgyLeovXZHwvqdcC/dlAa2ZT1RqcWGxY7Ej838t
Pi8K3MV8vkYL7zJfk6vUvxZtjb6NcRW+G7Toc/NZLN+762Wj8LH+dvojg2xM
nWSYwPzQMBuB+y5Z2DD/y4Y2fak762mzbPis1k9iPWmejbnNBy3l/lbZmLcr
02anIL9dNnp0OG3cmPjPxk7b05P5ns85G/v21h7mez/XbFx+PuVBHPGfDc/T
Ry/xPbwoG16Hc1MeCfQh2YjX32lDfyPOxtFMTStj4j8bzfabzWC8lWTD4fTt
4qbM/7NxxLZLP75nz8nGOZNse97P5un4MV2e8pb4153HsoxuPYj/bCz41Xpr
APGfjaS/FaDb//8AMAJWyg==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"wrap\"", TraditionalForm], 
    FormBox["\"dt(ms)\"", TraditionalForm]},
  AxesOrigin->{0, Automatic},
  ImageSize->{572., Automatic},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.6243844156094513`*^9, {3.624384456040811*^9, 3.624384560544199*^9}, {
   3.6243846352163887`*^9, 3.6243846459125137`*^9}, 3.6244192812271347`*^9, {
   3.624420153984913*^9, 3.6244201664620333`*^9}, {3.6244207511310253`*^9, 
   3.624420767817078*^9}, {3.624421003836001*^9, 3.624421024275076*^9}, {
   3.62442114470572*^9, 3.624421163625698*^9}, {3.6244215971946898`*^9, 
   3.6244216091738873`*^9}, 3.624421693958198*^9, {3.624422017349765*^9, 
   3.6244220386743097`*^9}, 3.624422250717351*^9, 3.624422327944569*^9, 
   3.6244226505274763`*^9, 3.62442287135784*^9, {3.624422902095339*^9, 
   3.6244229272373857`*^9}, {3.624422978575899*^9, 3.624422999610565*^9}, 
   3.62442303086407*^9, 3.624423162536335*^9, {3.62442323331176*^9, 
   3.624423268849639*^9}, 3.62442338808399*^9, 3.624423731502079*^9, 
   3.6244244466234407`*^9, 3.62442448437811*^9, 3.624424647552424*^9, {
   3.6244247458664*^9, 3.62442475821891*^9}, 3.624424797740665*^9, {
   3.624425099734984*^9, 3.624425117104842*^9}, 3.624425147358684*^9, 
   3.624425326668703*^9, {3.6244255946910543`*^9, 3.624425625379713*^9}, 
   3.624425686955196*^9, 3.62442612408747*^9, 3.6244262761267014`*^9, 
   3.624432416764344*^9, {3.6244325294360933`*^9, 3.6244325435693808`*^9}, 
   3.624435269171359*^9, 3.624435356373416*^9, 3.6244357134173*^9, 
   3.624435912123579*^9, 3.624436235635056*^9, 3.624436663830328*^9, 
   3.624436761765616*^9, {3.624436856618684*^9, 3.624436877402865*^9}, 
   3.624437039073494*^9, 3.6244370711239862`*^9, 3.62443729956474*^9, 
   3.6244374317364473`*^9, 3.624437490419818*^9, 3.624437632590178*^9, 
   3.6244376681584463`*^9, {3.6244377762791643`*^9, 3.624437815729821*^9}, 
   3.624437850014256*^9, {3.624438124872037*^9, 3.624438149689188*^9}, {
   3.624438451397011*^9, 3.624438491118143*^9}, {3.624438548751203*^9, 
   3.6244385608009233`*^9}, {3.624440685786076*^9, 3.624440701737585*^9}, {
   3.6244407426371927`*^9, 3.624440766523355*^9}, 3.62444086785789*^9, 
   3.624440981544017*^9, 3.6244410525976954`*^9, {3.624441108831868*^9, 
   3.624441155298299*^9}, 3.624441196882956*^9, {3.624441278837331*^9, 
   3.6244413566717863`*^9}, {3.624441388925846*^9, 3.624441421023158*^9}, 
   3.624441785234561*^9, 3.6244418750372257`*^9, 3.624441954806617*^9, 
   3.624442583091407*^9, {3.624442632308647*^9, 3.624442649409938*^9}, 
   3.6244427016793737`*^9, 3.624443012287293*^9, 3.624443061605239*^9, 
   3.6244430989056787`*^9, 3.624443157474378*^9, {3.624443300578226*^9, 
   3.624443321029235*^9}, 3.6244434666351852`*^9, 3.624452529646256*^9, 
   3.6244528322208233`*^9, 3.6244529690004787`*^9, 3.6244534843490047`*^9, 
   3.624453585161682*^9, 3.624453742898755*^9, {3.624454181223988*^9, 
   3.624454198824938*^9}, 3.624454297968863*^9, 3.624454356480163*^9, {
   3.624454736445588*^9, 3.624454763349948*^9}, 3.624454801671138*^9, 
   3.624457520024889*^9, 3.624457550711982*^9, {3.624457595101779*^9, 
   3.6244576190703907`*^9}, 3.624457699998192*^9, 3.624457873591269*^9, 
   3.6244580025560293`*^9, 3.6244640280761747`*^9, 3.6244640893342247`*^9, 
   3.6244641794617434`*^9, 3.6244643499317493`*^9, 3.624537078132843*^9, 
   3.6245373375110817`*^9, 3.624537409938702*^9, 3.6245375693255177`*^9, 
   3.6245408732826433`*^9, 3.624540921789743*^9, 3.624645334039356*^9, 
   3.6246455291736317`*^9, 3.628262432280422*^9, {3.6282713567582293`*^9, 
   3.628271374792068*^9}, 3.628271576580818*^9, 3.628272062626257*^9, 
   3.62857087034846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{"deltas", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "160"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<wrap\>\"", ",", "\"\<dt(ms)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotJoined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624384358483335*^9, 3.6243844149813347`*^9}, {
   3.624384453318426*^9, 3.624384633863554*^9}, {3.6244196786469107`*^9, 
   3.624419680707993*^9}, {3.6244200826995296`*^9, 3.624420085267754*^9}, {
   3.624420973338192*^9, 3.6244209748254843`*^9}, {3.624421605678418*^9, 
   3.6244216084206676`*^9}, {3.6244237282563353`*^9, 3.624423730303809*^9}, {
   3.624426123327709*^9, 3.624426123525956*^9}, {3.6244525249947233`*^9, 
   3.624452528199924*^9}, {3.62445282836375*^9, 3.624452850173945*^9}, {
   3.6244528999336452`*^9, 3.624452917227475*^9}, 3.624452971785633*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFkW1IU3EUxremlNDA0KJo1Gy1jSVLazZzbXs29+LcJlixWJLNhpggCREp
Ldv1Q1qQaaGBaEX5MjEQES3NMlJsvZCYZqvoXWu9msT6EBOXYfd04XJ5/s85
v/Pc/0nYX7wjfxGHw1HPv3+/C8+Mtrzk5+fkvHz8O0CspvbA/VxWL0HWt8tl
iTpWx0Jy2yix7mN1PM6PVBbEuFi9Eqct3k0nwGoBvCusZ2eJJ4SwYco8S/3r
oPrwuCqJ+Oth6jK31ZMvRs+rqDcK0lLsrYgc5hFfhoNN3JvRlD8RoxdckV80
Tw79SDiSSvwktMhX+e+Rnwy3qdRTQ/k3YzwzocZK/C1o73vpktJ8BXoU1/XP
SKeg80h8UEr8rcipfS6MI1+JRl/a1EfSqfDan7ZVEn8bGpxWbiH5aVjmv9HL
pzwqlB0tesih+u1QTioMdeSrUVweNVxNWoN3/MJdbzWs1mLPxLkzh8gHBk99
CjhYzQCOfnFzipb1dQv7J18HXlegX0v59MgZ9bhPsnkYPb4q48ajiZ+OYW4o
fJz60/Hdy/R8oTwG6Dvbc+dYHmMAp2qsJUJ8Iy7Wdb9fzd4nY4TMp94QpH2Z
4DCJLgWo3wTngHwoQvnNWFpanyei+WZcjbkyzaN8GfihqvDPsfVMBmZeZ7sH
ybdgwiPz3SK+BR385ZPHKF8mXMHWR730/5kQdO9e+//+rXDaijRy6rdiLHw3
sIb2Z8MTSd+QmPLZoGqdftBBfDtKmqp/M8S3I7RTsDiX+FkYeJHdKCJ+Fgqu
bQzdma//A1GI/w4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"wrap\"", TraditionalForm], 
    FormBox["\"dt(ms)\"", TraditionalForm]},
  AxesOrigin->{0, 170.},
  ImageSize->{554., Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6244528505825787`*^9, {3.6244529031406183`*^9, 3.624452918194064*^9}, 
   3.6244529721336927`*^9, 3.624453484400199*^9, 3.6244535852134132`*^9, 
   3.6244537429501877`*^9, {3.6244541812878437`*^9, 3.624454198880582*^9}, 
   3.62445429801031*^9, 3.624454356541099*^9, {3.6244547365023613`*^9, 
   3.62445476341193*^9}, 3.624454801726232*^9, 3.624457520085804*^9, 
   3.624457550772564*^9, {3.624457595157061*^9, 3.624457619125421*^9}, 
   3.624457700052951*^9, 3.624457873660965*^9, 3.624458002626358*^9, 
   3.624464028116069*^9, 3.624464089389453*^9, 3.62446417951429*^9, 
   3.624464349988103*^9, 3.6245370781880293`*^9, 3.6245373375457907`*^9, 
   3.6245374099923563`*^9, 3.624537569392611*^9, 3.624540873370111*^9, 
   3.6245409218553667`*^9, 3.624645334108848*^9, 3.624645529223896*^9, 
   3.628262432347156*^9, {3.628271356825839*^9, 3.628271374861207*^9}, 
   3.628271576649642*^9, 3.6282720627113028`*^9, 3.6285708704556637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"estimated", "=", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"xin", ",", "1"}], "]"}], "-", 
       RowBox[{"Drop", "[", 
        RowBox[{"xin", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ")"}]}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.6243846609099483`*^9, 3.624384667391047*^9}, {
  3.624420170411154*^9, 3.6244201747698317`*^9}, {3.624420997499261*^9, 
  3.6244209995686283`*^9}, {3.624421612580594*^9, 3.624421615507983*^9}, {
  3.628570770605798*^9, 3.6285707789556723`*^9}}],

Cell[BoxData["170.67212511241217`"], "Output",
 CellChangeTimes->{{3.6243846646629333`*^9, 3.624384667678174*^9}, 
   3.6244192964838047`*^9, 3.624420175562426*^9, {3.624420751163677*^9, 
   3.624420767849408*^9}, {3.6244210003226633`*^9, 3.624421024304483*^9}, {
   3.624421144737988*^9, 3.624421163691804*^9}, {3.624421597223061*^9, 
   3.624421616024539*^9}, 3.624421694002427*^9, {3.6244220174164133`*^9, 
   3.624422038736175*^9}, 3.624422250750764*^9, 3.624422328012266*^9, 
   3.624422650558878*^9, 3.624422871392117*^9, {3.624422902146021*^9, 
   3.6244229272820807`*^9}, {3.6244229786069613`*^9, 3.624422999643383*^9}, 
   3.624423030898629*^9, 3.624423162584478*^9, {3.624423233345066*^9, 
   3.6244232688835363`*^9}, 3.6244233881180763`*^9, 3.6244244466737823`*^9, 
   3.6244244844299383`*^9, 3.624424647584111*^9, {3.62442474589917*^9, 
   3.624424758307806*^9}, 3.624424797774341*^9, {3.624425099819145*^9, 
   3.624425117136755*^9}, 3.6244251473917847`*^9, 3.6244253267019577`*^9, {
   3.6244255947239647`*^9, 3.624425625463367*^9}, 3.624425686988316*^9, 
   3.6244262271348457`*^9, 3.624426276280756*^9, 3.6244324168480043`*^9, 
   3.624432546018281*^9, 3.624435269204011*^9, 3.624435358189364*^9, 
   3.6244357134509277`*^9, 3.624435912191738*^9, 3.6244362374671383`*^9, 
   3.624436663897236*^9, 3.624436761798417*^9, {3.624436856702532*^9, 
   3.624436877436592*^9}, 3.624437039157713*^9, 3.624437071208436*^9, 
   3.624437299714548*^9, 3.624437431818783*^9, 3.624437490503786*^9, 
   3.6244376326754436`*^9, 3.624437668243185*^9, {3.624437776362773*^9, 
   3.6244378157961082`*^9}, 3.624437850048203*^9, {3.6244381249566317`*^9, 
   3.624438149773918*^9}, {3.6244384514487877`*^9, 3.6244384911504107`*^9}, {
   3.6244385487841053`*^9, 3.624438560885024*^9}, {3.624440685885027*^9, 
   3.62444070182034*^9}, {3.62444074267101*^9, 3.624440766571887*^9}, 
   3.62444086789089*^9, 3.624440981575493*^9, 3.624441052646504*^9, {
   3.624441108864604*^9, 3.624441155383012*^9}, 3.6244411969311666`*^9, {
   3.624441278920453*^9, 3.624441356704953*^9}, {3.624441388973411*^9, 
   3.624441421053931*^9}, 3.624441785289812*^9, 3.624441875092497*^9, 
   3.624441954873383*^9, 3.624442583158367*^9, {3.624442632346527*^9, 
   3.624442649446939*^9}, 3.624442701742638*^9, 3.624443012337326*^9, 
   3.624443061659355*^9, 3.6244430989576283`*^9, 3.6244431575243797`*^9, {
   3.6244433006271963`*^9, 3.624443321084618*^9}, 3.624443466683695*^9, 
   3.624453484482443*^9, 3.6244535852625027`*^9, 3.624453742999267*^9, {
   3.624454181340823*^9, 3.624454198986196*^9}, 3.6244542980604*^9, 
   3.624454356584869*^9, {3.624454736550909*^9, 3.62445476347122*^9}, 
   3.624454801826209*^9, 3.6244575201264753`*^9, 3.6244575508339252`*^9, {
   3.624457595206127*^9, 3.6244576192199173`*^9}, 3.6244577001022177`*^9, 
   3.624457873732366*^9, 3.624458002705237*^9, 3.6244640282263193`*^9, 
   3.624464089500455*^9, 3.6244641796124268`*^9, 3.624464350037951*^9, 
   3.624537078236685*^9, 3.6245373376743593`*^9, 3.624537410058835*^9, 
   3.6245375694571953`*^9, 3.624540873431408*^9, 3.62454092192101*^9, 
   3.6246453341904793`*^9, 3.624645529273628*^9, 3.628262432428235*^9, 
   3.628267813326602*^9, 3.628271424792706*^9, 3.628272111179303*^9, {
   3.628570780624539*^9, 3.6285707820534697`*^9}, 3.628570870516357*^9}]
}, Open  ]],

Cell["Is it close?", "Text",
 CellChangeTimes->{{3.628570826543075*^9, 3.628570828482108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Texpected", "-", 
    RowBox[{
     SuperscriptBox["10", "6"], "estimated"}]}], ")"}], "/", 
  "Texpected"}]], "Input",
 CellChangeTimes->{{3.628570786304118*^9, 3.628570819539225*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.000031983080540201626`"}]], "Output",
 CellChangeTimes->{{3.628570794589098*^9, 3.628570820008685*^9}, 
   3.628570870573062*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Init the filter with first sample", "Subsubsection",
 CellChangeTimes->{{3.6244195725568247`*^9, 3.624419607524479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x0", "=", 
  RowBox[{"xin", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.624435720983019*^9, 3.6244357273504667`*^9}}],

Cell[BoxData["69321947690937"], "Output",
 CellChangeTimes->{
  3.624435728234734*^9, 3.624435912323462*^9, 3.6244362452013702`*^9, 
   3.624436664045602*^9, 3.624436761931411*^9, {3.624436856850819*^9, 
   3.6244368775344152`*^9}, 3.6244370393070593`*^9, 3.6244370713581257`*^9, 
   3.6244372998640757`*^9, 3.624437431968256*^9, 3.6244374906536617`*^9, 
   3.624437632824759*^9, 3.624437668392057*^9, {3.6244377765125628`*^9, 
   3.6244378159473248`*^9}, 3.624437850180455*^9, {3.6244381251049633`*^9, 
   3.624438149922855*^9}, {3.624438451581202*^9, 3.624438491267198*^9}, {
   3.624438548917685*^9, 3.624438561035282*^9}, {3.6244406860348997`*^9, 
   3.624440701970601*^9}, {3.6244407427866583`*^9, 3.624440766672563*^9}, 
   3.624440867990741*^9, 3.6244409816988277`*^9, 3.624441052745858*^9, {
   3.6244411089982643`*^9, 3.624441155533354*^9}, 3.6244411970839987`*^9, {
   3.624441279069688*^9, 3.6244413568376904`*^9}, {3.624441389156845*^9, 
   3.624441421190955*^9}, 3.6244417854508257`*^9, 3.624441875226203*^9, 
   3.624441955010151*^9, 3.6244425833802156`*^9, {3.6244426324801483`*^9, 
   3.624442649559382*^9}, 3.6244427018829737`*^9, 3.6244430124751177`*^9, 
   3.624443061792779*^9, 3.624443099089431*^9, 3.624443157662444*^9, {
   3.624443300763207*^9, 3.624443321212949*^9}, 3.6244434668172503`*^9, 
   3.6244534846490088`*^9, 3.624453585478661*^9, 3.624453743133013*^9, {
   3.624454181479059*^9, 3.624454199209766*^9}, 3.624454298264221*^9, 
   3.6244543567463627`*^9, {3.6244547367005568`*^9, 3.624454763603924*^9}, 
   3.624454802021708*^9, 3.62445752027913*^9, 3.624457550983728*^9, {
   3.624457595334537*^9, 3.624457619357542*^9}, 3.624457700280385*^9, 
   3.62445787393725*^9, 3.6244580028720417`*^9, 3.6244640284432783`*^9, 
   3.624464089721169*^9, 3.624464179833006*^9, 3.624464350220825*^9, 
   3.624537078401992*^9, 3.6245373378794813`*^9, 3.624537410261869*^9, 
   3.624537569623939*^9, 3.6245408735983953`*^9, 3.624540922087267*^9, 
   3.6246453343571157`*^9, 3.624645529406575*^9, 3.628262432610091*^9, {
   3.628271357072797*^9, 3.628271374948348*^9}, 3.628271576780078*^9, 
   3.628272062843177*^9, 3.628570870627262*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xin", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"xin", ",", "1"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "first", " ", "element", " ", "was", " ", "used", " ", "so", " ", "do", 
    " ", "not", " ", "reuse"}], " ", "*)"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", "x0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"filtered", " ", "x"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"u", " ", "=", " ", 
    RowBox[{"x", "-", 
     RowBox[{"xin", " ", ":", " ", 
      RowBox[{
       RowBox[{"the", " ", "'"}], 
       RowBox[{"error", "'"}], " ", "is", " ", "the", " ", "spring", " ", 
       "extension"}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dx", "=", "Texpected"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dx", "/", "dt"}], " ", "=", " ", 
    RowBox[{
    "expected", " ", "change", " ", "rate", " ", "of", " ", "filtered", " ", 
     "x"}]}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6244193488571453`*^9, 3.624419411841762*^9}, {
   3.624419634813168*^9, 3.624419637908942*^9}, {3.624419697435989*^9, 
   3.624419702219667*^9}, {3.62442019215329*^9, 3.624420213513075*^9}, {
   3.6244205752258873`*^9, 3.62442062723174*^9}, {3.624421047592799*^9, 
   3.624421081943409*^9}, {3.6244211179350348`*^9, 3.62442112371975*^9}, 
   3.624421158295004*^9, {3.624421464487898*^9, 3.624421530311472*^9}, {
   3.624421561479252*^9, 3.6244215615501204`*^9}, {3.624421623981831*^9, 
   3.624421632587823*^9}, {3.6244216768845587`*^9, 3.62442167695715*^9}, {
   3.624421834689013*^9, 3.624421837334715*^9}, {3.624421877151414*^9, 
   3.624421879199603*^9}, {3.624421977355467*^9, 3.624422016499848*^9}, {
   3.624422317150262*^9, 3.62442232579532*^9}, {3.6244255931556263`*^9, 
   3.624425621840562*^9}, {3.624432128848634*^9, 3.62443214002184*^9}, {
   3.62443578657073*^9, 3.624435812287558*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xin", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", "x"}]], "Input",
 CellChangeTimes->{{3.624442834463595*^9, 3.624442849450899*^9}}],

Cell[BoxData["169997862"], "Output",
 CellChangeTimes->{{3.624442838217901*^9, 3.624442860782143*^9}, 
   3.624443012585919*^9, 3.6244430619227037`*^9, 3.624443099222405*^9, 
   3.6244431577742233`*^9, {3.6244433008783703`*^9, 3.624443321328183*^9}, 
   3.624443467032844*^9, 3.624453484815077*^9, 3.624453585595229*^9, 
   3.624453743249403*^9, {3.624454181589044*^9, 3.624454199359543*^9}, 
   3.624454298404849*^9, 3.624454356862937*^9, {3.6244547368283787`*^9, 
   3.62445476373225*^9}, 3.62445480217107*^9, 3.6244575204073687`*^9, 
   3.624457551111208*^9, {3.6244575954500027`*^9, 3.624457619486802*^9}, 
   3.6244577003980207`*^9, 3.6244578740871077`*^9, 3.6244580030362587`*^9, 
   3.624464028593059*^9, 3.624464089851672*^9, 3.6244641799777946`*^9, 
   3.624464350331032*^9, 3.624537078538622*^9, 3.62453733801195*^9, 
   3.624537410385457*^9, 3.6245375697584343`*^9, 3.624540873730955*^9, 
   3.6245409222203007`*^9, 3.6246453344891443`*^9, 3.624645529522586*^9, 
   3.62826243274398*^9, {3.628271357206709*^9, 3.628271375058157*^9}, 
   3.6282715769126*^9, 3.628272062977085*^9, 3.628570870695856*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spring constant", "Subsubsection",
 CellChangeTimes->{{3.624435817069434*^9, 3.6244358197357397`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.624420250106203*^9, 3.624420273487976*^9}, {
   3.624436851708943*^9, 3.624436851844595*^9}, {3.62443702728045*^9, 
   3.6244370273920317`*^9}, 3.624437070184816*^9, 3.624437298138673*^9, 
   3.624437430623001*^9, 3.624437487388212*^9, 3.62443762548829*^9, 
   3.624441154323024*^9}],

Cell["Damping constant", "Text",
 CellChangeTimes->{{3.62442033423564*^9, 3.624420336413869*^9}}],

Cell["\<\
The mass, this determines how slow system follows changes in xin. \
Bigger=slower.\
\>", "Text",
 CellChangeTimes->{{3.624422146867888*^9, 3.62442219247043*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", "10000"}], ";"}]], "Input",
 CellChangeTimes->{{3.6244221396674147`*^9, 3.6244221445604563`*^9}, 
   3.624422995895824*^9, 3.624423028286407*^9, {3.624437032503647*^9, 
   3.624437033079817*^9}, {3.624437489486058*^9, 3.6244374896028843`*^9}, 
   3.624437631711893*^9, 3.6244411630877657`*^9, {3.6244412764139767`*^9, 
   3.624441288588235*^9}, {3.6244414079231243`*^9, 3.624441419834755*^9}, {
   3.624454196490909*^9, 3.6244541967136917`*^9}, 3.624464026576754*^9, 
   3.624464086670227*^9, 3.6244643480493298`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Da", "=", 
    RowBox[{"2", 
     SqrtBox[
      RowBox[{"M", " ", "K"}]]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"cricital", " ", "damping"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.624420329135312*^9, 3.624420344374621*^9}, {
   3.624424645060995*^9, 3.62442464558707*^9}, {3.6244247421702642`*^9, 
   3.624424756296568*^9}, {3.624424794402196*^9, 3.624424795656026*^9}, {
   3.6244376288163843`*^9, 3.6244376294158497`*^9}, 3.6244376669834557`*^9, {
   3.624437775307704*^9, 3.6244377753771667`*^9}, {3.6244381232684927`*^9, 
   3.624438148706808*^9}, 3.6244384804268007`*^9, 3.624438560073593*^9, {
   3.6244406252171717`*^9, 3.624440661957884*^9}, {3.624454326558324*^9, 
   3.624454332741542*^9}, {3.6245456541638193`*^9, 3.624545657049755*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter", "Section",
 CellChangeTimes->{{3.6244198052411833`*^9, 3.624419805873118*^9}, {
  3.6244544966626863`*^9, 3.6244544979737062`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"filter", "[", "inputx_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xnext", "=", 
      RowBox[{"x", "+", "dx"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"du", "=", 
      RowBox[{"inputx", "-", "x"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dx", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"99", "dx"}], "+", "du"}], ")"}], "/", "100"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"exponential", " ", "towards", " ", "target"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", "xnext"}], ";", "\[IndentingNewLine]", "x"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.624441578990259*^9, 3.6244416675322933`*^9}, {
   3.6244417312742567`*^9, 3.624441782040464*^9}, {3.624441951430627*^9, 
   3.6244419535890427`*^9}, {3.624442571179761*^9, 3.6244425812920856`*^9}, {
   3.6244426133716393`*^9, 3.624442648441091*^9}, {3.624442977880671*^9, 
   3.6244430098569593`*^9}, {3.6244430552157307`*^9, 3.624443059342122*^9}, 
   3.624443094583493*^9, {3.624443138502576*^9, 3.6244431425966463`*^9}, {
   3.624443278329529*^9, 3.624443319727839*^9}, {3.624443462909917*^9, 
   3.624443464428803*^9}, {3.6244533104461403`*^9, 3.624453314771913*^9}, {
   3.624453352761724*^9, 3.624453384489955*^9}, {3.624453446871974*^9, 
   3.624453480087138*^9}, {3.6244535802604017`*^9, 3.62445358279417*^9}, {
   3.628271917735402*^9, 3.628271920974771*^9}}],

Cell[CellGroupData[{

Cell["spring - damper based filter. Is jumpy.", "Subsubsection",
 CellChangeTimes->{{3.624454442578331*^9, 3.6244544549925947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"filter", "[", "inputx_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F", ",", "du", ",", "xnext", ",", "unext"}], "}"}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xnext", "=", 
       RowBox[{"x", "+", "dx"}]}], " ", ";", 
      RowBox[{"(*", " ", 
       RowBox[{"the", " ", "next", " ", "filtered", " ", "output"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"unext", "=", 
       RowBox[{"inputx", "-", "xnext"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"error", " ", "u"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"du", " ", "=", " ", 
       RowBox[{"unext", "-", "u"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"change", " ", "of", " ", "the", " ", "error"}], ",", " ", 
        RowBox[{"for", " ", "damping"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"F", "=", 
       RowBox[{
        RowBox[{"K", " ", "unext"}], " ", "+", " ", 
        RowBox[{"Da", " ", "du"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"force", " ", "on", " ", "spring"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"dx", " ", "=", " ", 
       RowBox[{"dx", " ", "+", " ", 
        RowBox[{"F", "/", "M"}]}]}], " ", ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", "xnext"}], ";", " ", 
      RowBox[{"u", "=", "unext"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"update", " ", "the", " ", "filter"}], " ", "*)"}], 
      "\[IndentingNewLine]", "x"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.624422470715583*^9, 3.624422628800604*^9}, 
   3.624422869340523*^9, 3.624422925048815*^9, {3.624425028359315*^9, 
   3.624425114356954*^9}, 3.624425145181428*^9, {3.624425312945868*^9, 
   3.624425318992035*^9}, {3.624425681104986*^9, 3.62442568466451*^9}, {
   3.624432190030569*^9, 3.624432294052739*^9}, {3.62443234490021*^9, 
   3.624432410569474*^9}, {3.624435218554648*^9, 3.624435219930438*^9}, {
   3.6244353304708776`*^9, 3.6244353337752733`*^9}, {3.62443541713354*^9, 
   3.624435443373294*^9}, {3.624435495707706*^9, 3.6244355058031054`*^9}, {
   3.624436138901134*^9, 3.6244361415314083`*^9}, {3.6244362906392527`*^9, 
   3.6244362923989353`*^9}, 3.624436646831129*^9, {3.624436723032716*^9, 
   3.624436758722207*^9}, {3.624436843729743*^9, 3.6244368747607718`*^9}, {
   3.6244374787605247`*^9, 3.6244374804462023`*^9}, {3.624437549350926*^9, 
   3.624437550485314*^9}, {3.624437695122006*^9, 3.6244377155053253`*^9}, {
   3.624437750640442*^9, 3.62443781459858*^9}, {3.624437848253927*^9, 
   3.624437848437379*^9}, {3.6244384499986973`*^9, 3.624438472150176*^9}, 
   3.6244385476824102`*^9, {3.624440700594091*^9, 3.624440700735982*^9}, {
   3.6244407413370743`*^9, 3.62444076400749*^9}, {3.624440980338188*^9, 
   3.624441003671946*^9}, {3.624441105301567*^9, 3.624441134788026*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["spring - damper filter with outlier check/skip", "Subsubsection",
 CellChangeTimes->{{3.6244544649810753`*^9, 3.624454473960127*^9}}],

Cell["\<\
Works great for the test set. Only worry is that the jitter detect uses the \
du which is change of error.
  An absolute distance of unext from Texpected might be better but in \
practice it seems worse\
\>", "Text",
 CellChangeTimes->{{3.624457393511224*^9, 3.624457471864175*^9}, {
  3.624457690982121*^9, 3.624457697421685*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"filter", "[", "inputx_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xnext", ",", " ", "unext", ",", " ", "du", ",", " ", "F"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F", ",", "du", ",", "xnext", ",", "unext"}], "}"}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xnext", "=", 
       RowBox[{"x", "+", "dx"}]}], " ", ";", 
      RowBox[{"(*", " ", 
       RowBox[{"the", " ", "next", " ", "filtered", " ", "output"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"unext", "=", 
       RowBox[{"inputx", "-", "xnext"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"error", " ", "u"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"du", " ", "=", " ", 
       RowBox[{"unext", "-", "u"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"change", " ", "of", " ", "the", " ", "error"}], ",", " ", 
        RowBox[{"for", " ", "damping"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"F", "=", 
       RowBox[{
        RowBox[{"K", " ", "unext"}], " ", "+", " ", 
        RowBox[{"Da", " ", "du"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"force", " ", "on", " ", "spring"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"dx", " ", "=", " ", 
       RowBox[{"dx", " ", "+", " ", 
        RowBox[{"F", "/", "M"}]}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", "xnext"}], ";", " ", 
      RowBox[{"u", "=", "unext"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"update", " ", "the", " ", "filter"}], " ", "*)"}], 
      "\[IndentingNewLine]", "x"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.624422470715583*^9, 3.624422628800604*^9}, 
   3.624422869340523*^9, 3.624422925048815*^9, {3.624425028359315*^9, 
   3.624425114356954*^9}, 3.624425145181428*^9, {3.624425312945868*^9, 
   3.624425318992035*^9}, {3.624425681104986*^9, 3.62442568466451*^9}, {
   3.624432190030569*^9, 3.624432294052739*^9}, {3.62443234490021*^9, 
   3.624432410569474*^9}, {3.624435218554648*^9, 3.624435219930438*^9}, {
   3.6244353304708776`*^9, 3.6244353337752733`*^9}, {3.62443541713354*^9, 
   3.624435443373294*^9}, {3.624435495707706*^9, 3.6244355058031054`*^9}, {
   3.624436138901134*^9, 3.6244361415314083`*^9}, {3.6244362906392527`*^9, 
   3.6244362923989353`*^9}, 3.624436646831129*^9, {3.624436723032716*^9, 
   3.624436758722207*^9}, {3.624436843729743*^9, 3.6244368747607718`*^9}, {
   3.6244374787605247`*^9, 3.6244374804462023`*^9}, {3.624437549350926*^9, 
   3.624437550485314*^9}, {3.624437695122006*^9, 3.6244377155053253`*^9}, {
   3.624437750640442*^9, 3.62443781459858*^9}, {3.624437848253927*^9, 
   3.624437848437379*^9}, {3.6244384499986973`*^9, 3.624438472150176*^9}, 
   3.6244385476824102`*^9, {3.624440700594091*^9, 3.624440700735982*^9}, {
   3.6244407413370743`*^9, 3.62444076400749*^9}, {3.624440980338188*^9, 
   3.624441003671946*^9}, {3.624441105301567*^9, 3.624441134788026*^9}, {
   3.62445460215036*^9, 3.624454635739024*^9}, {3.624454674946793*^9, 
   3.6244546908340483`*^9}, {3.624454747288447*^9, 3.6244547620974903`*^9}, {
   3.624537075791905*^9, 3.6245370762725687`*^9}, {3.624645504275021*^9, 
   3.624645508372271*^9}, {3.6282719782719584`*^9, 3.628271984334175*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xfiltered", " ", "=", " ", 
   RowBox[{"filter", "/@", "xin"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.624422652124861*^9, 3.624422662877635*^9}, 
   3.624422912337863*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["10", 
   RowBox[{"-", "6"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"xfiltered", "-", "xin"}], ")"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.624453979646616*^9, 3.624454012616561*^9}, {
  3.624454067503755*^9, 3.624454083471241*^9}, {3.624454125172819*^9, 
  3.624454128228389*^9}}],

Cell[BoxData["0.645665859375`"], "Output",
 CellChangeTimes->{{3.624453986831155*^9, 3.624454013089078*^9}, {
   3.6244540749081707`*^9, 3.6244540839935703`*^9}, {3.6244541254701443`*^9, 
   3.6244541284825783`*^9}, {3.624454181905737*^9, 3.624454199675136*^9}, 
   3.624454298637824*^9, 3.624454357145857*^9, {3.624454737162271*^9, 
   3.624454764075135*^9}, 3.6244548024704237`*^9, 3.6244575207418747`*^9, 
   3.6244575514443607`*^9, {3.6244575957505617`*^9, 3.624457619820606*^9}, 
   3.624457700698146*^9, 3.624457874386949*^9, 3.624458003353331*^9, 
   3.6244640289923964`*^9, 3.6244640902560673`*^9, 3.624464180352982*^9, 
   3.624464350599176*^9, 3.624537078980455*^9, 3.624537338360574*^9, 
   3.624537410753664*^9, 3.624537570107905*^9, 3.624540874413826*^9, 
   3.624540922634718*^9, 3.624645335310644*^9, 3.624645529806066*^9, 
   3.628262433112073*^9, {3.628271357656742*^9, 3.6282713753568077`*^9}, 
   3.628271577346035*^9, 3.628272063393168*^9, 3.628570870892853*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Does it follow xin?", "Subsection",
 CellChangeTimes->{{3.624422787911628*^9, 3.624422790930771*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "xfiltered", "]"}]], "Input",
 CellChangeTimes->{{3.624442006739355*^9, 3.624442009641322*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
8aZiubiR91di+Lit637w/q15T84eaOH9lThZ+d85nbW0vxKpZtoPO5BTlPAQ
Dao3IIuUSDk3S9eIrFJCXBnQrzc5R4msK6KxA8gFStzsecDNjFyohNXKcj8L
8h4l8kY8ThhFLlGi9En7ZWPJZUrczzDeZkuuUEJx5o/jjuTLSpw1CbzhTK5U
wnla3Iup5Goljq9Y+d2dXKPErq5/dZlNfqvE5hWXh8wj1yuRn/Zy/CJyU+ve
+wy8BGQtFUY+6h8WTNZT4fNj+6wIsqEKbw0D18SQjVUw6CTcm0A2UeFZx2UV
qWQLFb4sO3Ivi2ylQlynM3VSsp0KXU480laTocLJyTq9V5LdVNDssrPMI3uq
YNzs5VJA9lFBe1vqos1kgQoHkw7GbieHqWA/57JyN++vgtn7D5v38/4q/Kof
ePQw76/C5QK7q6W8f+v34bS45iTvr4LNzlVfK3h/Fb7V7e50kfdXwavk2qBr
vL8Kn8p+2VXy/ipMCTKadZf3VyHRwzb4Ie/f+n01hqY/4/1V+O6UlfuS91dh
vn/h7ne8vwqD42+Vf+T9Va1/3n5Z1cD7q6D3VfffJt5fhTEBNlq/ef/WzyOa
3rNtPu2vxssDkSP1yHpq5I/aMKkz2VANM70DPt3Ixmq4Zd1Y2otsosbzUz9l
/cgWapzub7DRlGylRpNg1GFzsp0adpcWXBpBhhpT7KKeWJHd1HjxQNNgQ/ZU
IzOktMN4so8a/c5fHgiyQA3/uW9sXMhhrfk/us2YThaqsXuOWeAscooaS+8g
xZssUqO5InLlArJKjQq7jJ1+5Bw1esWsPxFELlDjmP65yjByoRoZ/lWvo8l7
1Niq/6k5jlyixv73fbqnkMvU2FA1bFgmuUINE0PXiRLyZTVkr2LmKsmVakQN
yo5cTq5Wo+XFBnEuuUYNrVfn1uWT36oxoOjOgY3kejWUnh/PFZKbWvO793xY
xPtrkDVzcP1e3l+DRbbQLeH9NRi9PqzfMd5fgyflm8ae4P01KJtZ6naa99fg
6Zwnfud5fw06vDVMvML7azAsatiym7y/BmYfPbZV8f4aHLcUH6/m/TV4NXr9
jSe8vwZB2eUvanl/DcxffPz+hvfXwKRM1/AD76/BpNwR5p95fw0qe/o6fuP9
NdAyivNq5v01uNl3bVibdbS/BmFRF7N0yQUa7Gv9z7c+uVCDHkNa9hqS97T2
KbA804NcokHerin3+7T6fwCPm3fQ
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.62444201020639*^9, 3.624442583913096*^9, {3.6244426330155897`*^9, 
   3.6244426501262407`*^9}, 3.624442702428033*^9, 3.624443013021056*^9, 
   3.624443062359659*^9, 3.6244430996949053`*^9, 3.6244431582251177`*^9, {
   3.624443301312948*^9, 3.6244433217832613`*^9}, 3.624443467472171*^9, 
   3.624453485331505*^9, 3.6244535860451202`*^9, 3.624453743516055*^9, {
   3.624454181963489*^9, 3.624454199713354*^9}, 3.624454298682377*^9, 
   3.6244543572010403`*^9, {3.624454737232358*^9, 3.624454764121621*^9}, 
   3.624454802527049*^9, 3.624457520779895*^9, 3.6244575515006323`*^9, {
   3.624457595801125*^9, 3.624457619876175*^9}, 3.624457700754429*^9, 
   3.624457874441675*^9, 3.6244580034089727`*^9, 3.624464029031147*^9, 
   3.6244640903057623`*^9, 3.624464180400298*^9, 3.624464350671133*^9, 
   3.624537079036525*^9, 3.6245373384106607`*^9, 3.624537410788396*^9, 
   3.624537570155033*^9, 3.62454087444895*^9, 3.624540922702505*^9, 
   3.624645335656632*^9, 3.6246455298568497`*^9, 3.628262433165688*^9, {
   3.628271357712451*^9, 3.628271375414536*^9}, 3.6282715774024467`*^9, 
   3.6282720634502897`*^9, 3.628570870935028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], 
    RowBox[{"(", 
     RowBox[{"xfiltered", "-", "xin"}], ")"}]}], ",", " ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<wrap\>\"", ",", "\"\<dt(ms)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624422669794681*^9, 3.6244227513661137`*^9}, {
  3.6244248988884277`*^9, 3.624424942189254*^9}, {3.624432446095001*^9, 
  3.624432446316971*^9}, {3.6244535255565166`*^9, 3.6244535293948517`*^9}, {
  3.6244537073968163`*^9, 3.6244537180770407`*^9}, {3.624453818866704*^9, 
  3.624453823417116*^9}, {3.624454106696151*^9, 3.624454110113296*^9}, {
  3.624464114052319*^9, 3.624464115697671*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1m3lcTO0bxsv2WopByIuMPdmiFyl0JUsohVKRTNpG67TvNTPNmi2yRJax
tNnKnhZNihZLSZQtQyJ71sj2m37dxz8+41znec5zzv19rvu+zzFifcAKj04a
GhqrOmtotP/d8afFbPHHjz3uezaZ0T+Amz1Xr827ln53BzdS79H+6TuLOn6z
EDX4atDSrOd0XAevnViVP2fcod+66BUVoKVZfYT0Q7F/36HcxvuNdJyNK5IM
h0rdGvo9EnmfnA78E55D+tH4VB1+8UwCox8Lq+9pcQ2vq+m3PiLM/ItiXp8h
vQGs/oyLb+3B6CdiXTe3+YcLquj3ZHzLGdSzflcB6Q2h5Rg0YOP5Z3R8KpaN
u/86yLuSfk9D2reRD7aMyCe9EbS2bHd42ZfR/4frLQf9FbYV9Hs61rz95uTR
Vkz6GTjWK2KPq+VTOj4TNWnxiw1aGb0xRPlnwx5OvUL6WYjcamRdr8voTVA5
1elRvO5V+m2Khr9lPfrfKyH9bOy896Qff5WKfs/B5cNrsl8JmPHnYnj9x3Vs
3Wt03Ax/m1P/0/70mH4DSfedvizrSno+EF34s7EwjhnfHCufswKDE0nPN8eJ
pyNbQxZcp/HngffyiuWUtiI6Pg/fYm4G3R/6hM63gPEhlqbUme4n3wL3zcec
cnurpOPzMSzI6BE//xGdPx9mW16UV/Zh7v8CuM/qkTYlhO4nfwGaYk63PutB
eo2F2DtS+Wqt8iaNvxDKTinTeLp5dHwRRj3YkpXPYq5/EcLjCxxOujPjW8L8
9mz+gu3M+JbI1RO/WT6/gc5fjM1jTmw+ffwGjb8YyX8rnhQeZ+JhCb5FjBim
p2SufwniJ/87TU/zFo2/FPN1kmcqQy7Q8aUoG+f+0s+Suf9WaIpeOPK/1cz4
VphZov39l+osHbfGl4F9Psz6zoxvjdgRzwv+NpJeYxmOpq+1Mkqj+Ocvw+mG
zAHpxcz9scGyD89+52repvFt0OeiRcn6EwwvtuA5X7PWDnrY8Ru2yOkUczFy
LfHFt8XcSMfM6Y9PdxxX2uLl0y7pdy7cp/OX437l0j/jfGi9WI5Rgm6pJjaX
6HqWY0N69P7aAQ/o/OUo/nnMOfM7c39WYGiM6zR7DVovVuBmlrtG5i8an78C
Paz7La2U0/UoVyDzcXanGIcTNP9KGDwL2X7yUT2dvxKdzflaw64y612J/NzN
3VoOnKf5V6JH/4Vnz6SSXsMOurOtfr74RuPDDmaBGr8vr2Pupx20rsnmH0om
vdIOjQHRwlJLGl/DHrFm013yBmfQ/PYQhA41s9Nirt8eT2PtJ9tdIL3SHlOu
6DTVsJn9bRWqvsYaW7JIj1Xomn4nT9uS9kP+KmhOLt/V9OYUzb8KV45sHnWv
tI7Od0BRrl3aJPOXdL4DBgf5zrHgHqP5HRCQu/XR3iX36HwHSPtNipxd8YLO
d8SUaZpFC6el0vmOKO0yPaaXNY3Pd0Tv/A+6er+b6HxHaDk9fj0rax+t3wmf
bh3Ssv98l853wtPzS4f0NnpO5zvhlPaAxl/aMlq/E9Ivmg3SHn+H5l+NTqnB
LVY6pMdqjBxiOSjV8zCtfzUuF5lHf+16m+ZfDfXqjD3bntH5a9DQaNX/wt9M
en7q3w5N85oCSM9fg+lvW0tNPEmvXAMzlUBTFJ5H1++Mgp1jTK4/qKb5nfFi
Vffjpx8/pfOdUXpj7tblf87R9Ttj7bQt2976Xaf512JPz4+WBe9Ij7XQa3u/
aldLPl3/WtzUGOR+XVhB86+FavLP0IwCZr92QW7gxh+XXC/T9bvg8v75ovgf
ZTS/C9S7pXOgN+mVLrCafnZXp7YrdP3rUKZdlOq/5yrNvw6jnctH5bbS/stX
H8999iyz/Bpd/zrM/Nm56cJmxg84cE1/t87pEo3P5uDBiTZnP49yuh4OQrOT
2874lnYc53BQ/15P8fMLMz4HBcOenlP9Jv9QcNDFzlhoN4P0Sg7c1p35yDlO
+52Kg1wee3QvQ8afXDv22xbaf9mu8Au4OPofLRofrvBXKE1/fKH9juMK9W5f
MNyM/JvvCl7lo5hRk2m/U7giOC6xUVlF4ytdMcUqvefCk7QfqVyhYXt185rZ
tN9prIdju0FrE//s9RjoO+rA2xkXaf712GRQkjukjfYvznp0VePxxpbZH9ej
ruiNkdcY8gPFetztWnAjx43GV67HOG5yyTg58alSHw/NTB+9lNnf3VAUJ9Me
qEt6thvSR7/hhegwPLth0+eZh1jFaTS/G1Z2MS7cOJ32I74brPuqvkw2IJ4V
bujL627v/W0vze+GzslDFtw7QDyr3Dr2BzviWcMd34t/1J5OFND87vh3yuPR
3XwYnt3xLfzCooAVpOe4o5/Px/EaCxk+3TvyB4tamt8d1/qb75MaNtL87jhx
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

    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  Frame->True,
  FrameLabel->{
    FormBox["\"wrap\"", TraditionalForm], 
    FormBox["\"dt(ms)\"", TraditionalForm]},
  ImageSize->{674., Automatic},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.624422743723301*^9, 3.624422752074442*^9}, 
   3.624422871773922*^9, {3.624422902895215*^9, 3.6244229276324167`*^9}, {
   3.6244229789399*^9, 3.624422999992977*^9}, 3.624423031247508*^9, 
   3.624423162917316*^9, {3.624423233677393*^9, 3.624423269216241*^9}, 
   3.6244233884499493`*^9, 3.624424447022168*^9, 3.6244244847613697`*^9, 
   3.624424647884501*^9, {3.6244247462502813`*^9, 3.624424758684856*^9}, 
   3.624424798073234*^9, {3.624424915524584*^9, 3.624424942595359*^9}, {
   3.624425100168222*^9, 3.624425117437724*^9}, 3.624425147741598*^9, 
   3.624425327017798*^9, {3.6244255950415*^9, 3.6244256258121862`*^9}, 
   3.624425687304648*^9, 3.62442627695815*^9, {3.624432417314624*^9, 
   3.624432446948353*^9}, 3.624435270186985*^9, 3.6244358794716797`*^9, 
   3.6244359141911993`*^9, 3.624436358087225*^9, 3.6244366665968437`*^9, 
   3.6244367624640293`*^9, {3.62443685730171*^9, 3.6244368779203167`*^9}, 
   3.624437039806169*^9, 3.624437071859316*^9, 3.624437300365116*^9, 
   3.6244374324696007`*^9, 3.6244374911881523`*^9, 3.624437633340197*^9, 
   3.6244376689086123`*^9, {3.624437777078497*^9, 3.624437818379919*^9}, 
   3.624437850697608*^9, {3.6244381275396767`*^9, 3.624438150456283*^9}, {
   3.624438452064685*^9, 3.624438495682851*^9}, {3.624438552718092*^9, 
   3.624438561567808*^9}, {3.624440688920836*^9, 3.624440702518098*^9}, {
   3.624440755870984*^9, 3.62444076717183*^9}, 3.624440868573001*^9, 
   3.624440982260912*^9, 3.6244410532798023`*^9, {3.624441109580806*^9, 
   3.6244411374165773`*^9}, 3.624441197867743*^9, {3.624441389773131*^9, 
   3.624441421890314*^9}, 3.6244417861663113`*^9, 3.6244418759748583`*^9, 
   3.624441955739517*^9, 3.624442583939289*^9, {3.624442633060713*^9, 
   3.6244426501583233`*^9}, 3.624442702462864*^9, 3.624443013103898*^9, 
   3.624443062455349*^9, 3.624443099740283*^9, 3.62444315827847*^9, {
   3.624443301396055*^9, 3.6244433218290443`*^9}, 3.624443467548547*^9, 
   3.6244534853659277`*^9, 3.624453530088523*^9, 3.624453586096012*^9, {
   3.624453712276215*^9, 3.624453743549179*^9}, 3.624453824094042*^9, {
   3.624454090461176*^9, 3.6244541106362677`*^9}, {3.624454181991252*^9, 
   3.624454199742247*^9}, 3.6244542987595673`*^9, 3.624454357290637*^9, {
   3.624454737312262*^9, 3.62445476416772*^9}, 3.624454802638413*^9, 
   3.624457520857821*^9, 3.624457551578396*^9, {3.624457595884053*^9, 
   3.624457619921598*^9}, 3.624457700832151*^9, 3.624457874554619*^9, 
   3.624458003537657*^9, 3.624464029069582*^9, {3.624464090343996*^9, 
   3.62446411612066*^9}, 3.6244641804280148`*^9, 3.6244643507541323`*^9, 
   3.624537079085693*^9, 3.6245373384434557`*^9, 3.624537410836555*^9, 
   3.6245375701897717`*^9, 3.624540874498013*^9, 3.624540922736331*^9, 
   3.6246453360106783`*^9, 3.624645529888397*^9, 3.628262433195808*^9, {
   3.628271357794889*^9, 3.628271375574751*^9}, 3.628271577430973*^9, 
   3.62827206347792*^9, 3.628570870950927*^9}]
}, Open  ]],

Cell["\<\
So the data can come in up to 6 ms late. This is the timestamps straight \
coming from USB \
\>", "Text",
 CellChangeTimes->{{3.624505721897024*^9, 3.6245057676917343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Does it keep a solid rate without jumping?", "Subsection",
 CellChangeTimes->{{3.624422826250722*^9, 3.624422839501996*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"deltas", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"xfiltered", ",", "1"}], "]"}], "-", 
      RowBox[{"Drop", "[", 
       RowBox[{"xfiltered", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], ")"}], "-", "Texpected"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6244328979935427`*^9, 3.624432909961659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"xfiltered", ",", "1"}], "]"}], "-", 
        RowBox[{"Drop", "[", 
         RowBox[{"xfiltered", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ")"}], "-", "Texpected"}], ")"}]}], 
   ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<wrap\>\"", ",", "\"\<diff with expected rate(\[Mu]s/wrap)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotJoined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624422771342164*^9, 3.624422817586211*^9}, {
  3.624423052127377*^9, 3.624423139531979*^9}, {3.624425366943058*^9, 
  3.624425421588139*^9}, {3.624440893786107*^9, 3.6244408959288054`*^9}, {
  3.624440941585395*^9, 3.6244409423754873`*^9}, {3.624443339472641*^9, 
  3.62444334919127*^9}, {3.624454382868978*^9, 3.6244543868518963`*^9}, {
  3.624456948382077*^9, 3.6244569576917048`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1mnd8FFX3xtfQQpPQJBiRJSAEEAhNA1Iu1dBC6KG6BEISIGTTN32270bQ
NfJiQMFFWvRFXBEF5JeXBURCEQJSgrSAiBEBI0WCtN+ZOc/1Hz9Dzt65M3O/
53nOubdDbPLkuACdTjetjk6n/p//qxlad3rPTj9d6+bHP4h3l3a5eeVmW1wH
ivPHHybbJp8eytdBoknAuILenWV8K3FQX2NYVx6M62Bh9R/pteqHa4h/RYx8
d/nll6K74u96kfW/K4Fxe9rgOlRkfBg8rmBwDeI7iWenS6r2vSjjO4t9R672
vbXyJVyHidxW295rWP8u4ruJvn2ndDu+Lgx/f11M/fU3978ftsZ1T+EeZnj9
0d9PEB8uLnXqbAqfJeN7C+dLbct6OFrgug/9vX55Wf1/Ed9Xi/d91QV/7ydW
Bo8cObKtjO8vrkxsuicgMEDw9Rt0/4PF75zqjL+/KTYa82ub7JXxEaK9fUnG
+FMvIH6AmLVw9tnF38r4gfQ+wyeePt8M12+J+ubW8e2NdRA/SPS6VLfZol4d
cT2Yxy+U4w8RUbGe3J821cffh4qSZXfffe2DDrgWInDrnMg1dRCvCPHdPfp9
mRx/mDD/p+PKk3GIV4aJIY3aFG8e3hLjDxfb1/51507Uc34/ynDx07GtZ77O
CMXvR4jxbx7utcopxx/B43eRzztS3OzcvHnzJnL8keKfsE/ya8Pl/EfR/Oj6
VbxPZZQ48bDvrUY+PX4/mtYfvb85rTD+aLH305cz6+16hO/1NsVVBf62UI7/
tug654Sve3s5fiStn55LMk7J8SP5eQfI+Y8RyS0ObNMtxPMqY8Rno74b2LlK
rp+xdL9/3xweI8cfK+x/frB5ajDmoxsnzpj+SJp57h+8n3Hit4qA6/PK5Psf
T8/z4ckLd+T7GU/r73xrffv7GH+CmPP+Z8+afizHnyAKFz+JPfyafP9RIvsP
Wr/N7mH8KPreNYZXXXL8ieJGRezhXkPBizJRbHv76r5BZsTrosXdUz2WZOzH
+xTRImbA/e+2xoAXJVoMujLx9N6r4MsfTXzdG/nU2B7jTxIpg8cePH8c8xGT
+P1/gvejTBKNzlmzP3sB4/sn0f/Fnf5N5PuZLFpveztsQ8gDjheTRccLuz39
nmB8ZbI4nPlsRfRozMc/WV1v/dscuYP5TyHeJnweseVVzH8K3e/XeWl75fNO
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
xcauZ56A/0zyl5dXfdsd9XNVJvcLVoOHmkzVP5bd+D9ZP2ehv4j1HZTF7ydX
1sNZlG/HFnz9f3U5PjyL+zUNwY/I0uqd2VHgJzpL7f+m/7ID+mbI4n7WHMQb
s7g+lPWtkkX5sdmn83+qz/GeLPafbtSr3izSp5aDSozgwZdF/uKr3UGNoIf+
LNUftyn+oS6+f5Yovk31wapQPH+Wpp/7ssFnTRbVv46NXR+BH52J1lNZjz+X
IT7IxP71NfCpN6n1TPhEzzNer+Em5msk9FCYtH6Sewv4iTZxf72t9KsmLX8V
7gY/RhPnY1lPKibyN+kdEu+i3vOYyK9PmzZtO/j0mkT+UJKb/hjfZ1L1M2N8
TDX8rYn7GR0QX2ESWj/jIfipMtH3WNHl5qc7eH3UmKi+v3brQDD6Vbpsrf7+
727EB2XT30M37LQfQz2WzfWb5C08m/sxx6U/zKb3scvT78FNjo/Opn/3Nz9i
AA+GbM5/x8CDMZv95Pu/on7L5n7hReiJJ5vfV3vEe7PFW1cmjk7uCL/qU+f7
1W7PSvDjz6b83F0s64v4imw1X/i6R4LPqmzmoRH0syab6/8hsv7MUftbUz8x
g7egHI6vB370OVwffgbewnNU/kPWr8TzihzixdLgXg30LTqHeHoSe7gE69uQ
IzYay24Ml/WeMYfqhYzxNTngTcnReFtxBfGeHOazAv7Wm8P19nLw48vh/NsO
8X71fp+8UfG0IcdX5ND7Ip4OIr6K5zOmKfipyVH3W3p2mtaE43W5xNPemLsh
qPeCcknvJ6dkZsh+TK54071v0KSZ4Dk8V/W7kWsuy/owV9OHOiMwfnSuWLTo
7M1gN3gz5JKedrl5ZST8pzGX65FDoXj+XHrenXFJMxDvyeV+Twh49uZq/Zct
aYj35fL6CAU//lzeX0h+yDxU5Gr8v7xJ9ntyyc/2WpU3APzU5Kr93sc1H8j9
hTwtvzukvgXl8f7QHdmPyVPX6wnfPehneJ64e4ry24eyX51H68e+8fMo8BOd
p/afxZ258J+GPK73WoBPYx7Xw1vhD5U8+p7nlvTceJzXkyeP/O/fbTPPQT+9
eaJ34PLX9sr+sC+P/Jk64H/Afx7Vax83HjMAelWRJwbsKC3c0AXxVXlqvXew
eOhP4D+P3tfnEY9zwYMuX+tP7kwHD0H5qr/dsLM/6j19Pn3f5keqj4K38Hyu
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
l6HQ+g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"wrap\"", TraditionalForm], 
    FormBox["\"diff with expected rate(\[Mu]s/wrap)\"", TraditionalForm]},
  ImageSize->{665., Automatic},
  PlotRange->{{0., 853.}, {-13.442971354156732`, 17.277364583343267`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.624425422200404*^9, {3.624425595091055*^9, 3.624425625846138*^9}, 
   3.6244256873882437`*^9, 3.624426277021202*^9, 3.6244324173484373`*^9, 
   3.624435270286113*^9, {3.6244358909897003`*^9, 3.624435914290111*^9}, 
   3.6244363629533978`*^9, 3.6244366667401323`*^9, 3.6244367626229773`*^9, {
   3.624436857401527*^9, 3.624436878050984*^9}, 3.624437039923749*^9, 
   3.6244370719745207`*^9, 3.624437300481865*^9, 3.624437432586458*^9, 
   3.6244374912862387`*^9, 3.6244376334405003`*^9, 3.6244376689743843`*^9, {
   3.624437777144992*^9, 3.624437818446941*^9}, 3.624437850795937*^9, {
   3.6244381276061707`*^9, 3.624438150522045*^9}, {3.624438452164425*^9, 
   3.6244384957832947`*^9}, {3.624438552785265*^9, 3.624438561633934*^9}, {
   3.624440688986743*^9, 3.62444070258473*^9}, {3.624440755938367*^9, 
   3.6244407672702827`*^9}, {3.624440868673666*^9, 3.624440896409876*^9}, 
   3.624440942909275*^9, 3.624440982377905*^9, 3.624441053395479*^9, {
   3.6244411096815863`*^9, 3.624441137513186*^9}, 3.6244411979961033`*^9, {
   3.624441389890499*^9, 3.6244414221025543`*^9}, 3.624441786350573*^9, 
   3.624441876170084*^9, 3.624441955890332*^9, 3.6244425840080547`*^9, {
   3.624442633177182*^9, 3.624442650275996*^9}, 3.6244427025278187`*^9, 
   3.6244430133030167`*^9, 3.624443062658607*^9, 3.6244430999397287`*^9, 
   3.624443158392627*^9, {3.624443301595327*^9, 3.6244433497798243`*^9}, 
   3.62444346766718*^9, 3.62445348543225*^9, 3.624453586228732*^9, 
   3.624453743650591*^9, {3.62445418205847*^9, 3.624454199825094*^9}, 
   3.624454299005225*^9, {3.624454357497011*^9, 3.624454387383355*^9}, {
   3.624454737512032*^9, 3.624454764367568*^9}, 3.624454802703609*^9, 
   3.624456958867837*^9, 3.62445752107517*^9, 3.62445755177822*^9, {
   3.624457596101117*^9, 3.624457620103613*^9}, 3.624457701048195*^9, 
   3.624457874620071*^9, 3.624458003603649*^9, 3.6244640291425037`*^9, 
   3.6244640904179688`*^9, 3.624464180495329*^9, 3.6244643509322453`*^9, 
   3.624537079260984*^9, 3.62453733851036*^9, 3.624537410904389*^9, 
   3.6245375702564077`*^9, 3.624540874598033*^9, 3.6245409229851017`*^9, 
   3.6246453361380997`*^9, 3.624645530072947*^9, 3.628262433265161*^9, {
   3.628271357965453*^9, 3.628271375662304*^9}, 3.628271577498475*^9, 
   3.62827206354377*^9, 3.628570871016781*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"xfiltered", ",", "1"}], "]"}], "-", 
        RowBox[{"Drop", "[", 
         RowBox[{"xfiltered", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ")"}], "-", "Texpected"}], ")"}]}], 
   ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<wrap\>\"", ",", "\"\<diff with expected rate(\[Mu]s/wrap)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624422771342164*^9, 3.624422817586211*^9}, {
  3.624423052127377*^9, 3.624423139531979*^9}, {3.624425366943058*^9, 
  3.624425421588139*^9}, {3.624440893786107*^9, 3.6244408959288054`*^9}, {
  3.624440941585395*^9, 3.6244409423754873`*^9}, {3.624443339472641*^9, 
  3.62444334919127*^9}, {3.624454382868978*^9, 3.6244543868518963`*^9}, {
  3.624454781653221*^9, 3.624454784453467*^9}, {3.624456969931102*^9, 
  3.624456974138479*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1mnd8FFX3xtfQQpPQJBiRJSAEEAhNA1Iu1dBC6KG6BEISIGTTN32270bQ
NfJiQMFFWvRFXBEF5JeXBURCEQJSgrSAiBEBI0WCtN+ZOc/1Hz9Dzt65M3O/
53nOubdDbPLkuACdTjetjk6n/p//qxlad3rPTj9d6+bHP4h3l3a5eeVmW1wH
ivPHHybbJp8eytdBoknAuILenWV8K3FQX2NYVx6M62Bh9R/pteqHa4h/RYx8
d/nll6K74u96kfW/K4Fxe9rgOlRkfBg8rmBwDeI7iWenS6r2vSjjO4t9R672
vbXyJVyHidxW295rWP8u4ruJvn2ndDu+Lgx/f11M/fU3978ftsZ1T+EeZnj9
0d9PEB8uLnXqbAqfJeN7C+dLbct6OFrgug/9vX55Wf1/Ed9Xi/d91QV/7ydW
Bo8cObKtjO8vrkxsuicgMEDw9Rt0/4PF75zqjL+/KTYa82ub7JXxEaK9fUnG
+FMvIH6AmLVw9tnF38r4gfQ+wyeePt8M12+J+ubW8e2NdRA/SPS6VLfZol4d
cT2Yxy+U4w8RUbGe3J821cffh4qSZXfffe2DDrgWInDrnMg1dRCvCPHdPfp9
mRx/mDD/p+PKk3GIV4aJIY3aFG8e3hLjDxfb1/51507Uc34/ynDx07GtZ77O
CMXvR4jxbx7utcopxx/B43eRzztS3OzcvHnzJnL8keKfsE/ya8Pl/EfR/Oj6
VbxPZZQ48bDvrUY+PX4/mtYfvb85rTD+aLH305cz6+16hO/1NsVVBf62UI7/
tug654Sve3s5fiStn55LMk7J8SP5eQfI+Y8RyS0ObNMtxPMqY8Rno74b2LlK
rp+xdL9/3xweI8cfK+x/frB5ajDmoxsnzpj+SJp57h+8n3Hit4qA6/PK5Psf
T8/z4ckLd+T7GU/r73xrffv7GH+CmPP+Z8+afizHnyAKFz+JPfyafP9RIvsP
Wr/N7mH8KPreNYZXXXL8ieJGRezhXkPBizJRbHv76r5BZsTrosXdUz2WZOzH
+xTRImbA/e+2xoAXJVoMujLx9N6r4MsfTXzdG/nU2B7jTxIpg8cePH8c8xGT
+P1/gvejTBKNzlmzP3sB4/sn0f/Fnf5N5PuZLFpveztsQ8gDjheTRccLuz39
nmB8ZbI4nPlsRfRozMc/WV1v/dscuYP5TyHeJnweseVVzH8K3e/XeWl75fNO
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
xcauZ56A/0zyl5dXfdsd9XNVJvcLVoOHmkzVP5bd+D9ZP2ehv4j1HZTF7ydX
1sNZlG/HFnz9f3U5PjyL+zUNwY/I0uqd2VHgJzpL7f+m/7ID+mbI4n7WHMQb
s7g+lPWtkkX5sdmn83+qz/GeLPafbtSr3izSp5aDSozgwZdF/uKr3UGNoIf+
LNUftyn+oS6+f5Yovk31wapQPH+Wpp/7ssFnTRbVv46NXR+BH52J1lNZjz+X
IT7IxP71NfCpN6n1TPhEzzNer+Em5msk9FCYtH6Sewv4iTZxf72t9KsmLX8V
7gY/RhPnY1lPKibyN+kdEu+i3vOYyK9PmzZtO/j0mkT+UJKb/hjfZ1L1M2N8
TDX8rYn7GR0QX2ESWj/jIfipMtH3WNHl5qc7eH3UmKi+v3brQDD6Vbpsrf7+
727EB2XT30M37LQfQz2WzfWb5C08m/sxx6U/zKb3scvT78FNjo/Opn/3Nz9i
AA+GbM5/x8CDMZv95Pu/on7L5n7hReiJJ5vfV3vEe7PFW1cmjk7uCL/qU+f7
1W7PSvDjz6b83F0s64v4imw1X/i6R4LPqmzmoRH0syab6/8hsv7MUftbUz8x
g7egHI6vB370OVwffgbewnNU/kPWr8TzihzixdLgXg30LTqHeHoSe7gE69uQ
IzYay24Ml/WeMYfqhYzxNTngTcnReFtxBfGeHOazAv7Wm8P19nLw48vh/NsO
8X71fp+8UfG0IcdX5ND7Ip4OIr6K5zOmKfipyVH3W3p2mtaE43W5xNPemLsh
qPeCcknvJ6dkZsh+TK54071v0KSZ4Dk8V/W7kWsuy/owV9OHOiMwfnSuWLTo
7M1gN3gz5JKedrl5ZST8pzGX65FDoXj+XHrenXFJMxDvyeV+Twh49uZq/Zct
aYj35fL6CAU//lzeX0h+yDxU5Gr8v7xJ9ntyyc/2WpU3APzU5Kr93sc1H8j9
hTwtvzukvgXl8f7QHdmPyVPX6wnfPehneJ64e4ry24eyX51H68e+8fMo8BOd
p/afxZ258J+GPK73WoBPYx7Xw1vhD5U8+p7nlvTceJzXkyeP/O/fbTPPQT+9
eaJ34PLX9sr+sC+P/Jk64H/Afx7Vax83HjMAelWRJwbsKC3c0AXxVXlqvXew
eOhP4D+P3tfnEY9zwYMuX+tP7kwHD0H5qr/dsLM/6j19Pn3f5keqj4K38Hyu
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
l6HQ+g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"wrap\"", TraditionalForm], 
    FormBox["\"diff with expected rate(\[Mu]s/wrap)\"", TraditionalForm]},
  ImageSize->{671., Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.624454784983973*^9, 3.624454802743608*^9}, 
   3.624456974953526*^9, 3.6244575211647987`*^9, 3.624457551847907*^9, {
   3.624457596188404*^9, 3.624457620188291*^9}, 3.624457701141921*^9, 
   3.6244578746544228`*^9, 3.624458003637493*^9, 3.624464029177024*^9, 
   3.624464090451193*^9, 3.6244641805338507`*^9, 3.624464351002852*^9, 
   3.6245370793721933`*^9, 3.624537338542945*^9, 3.624537410939288*^9, 
   3.624537570289132*^9, 3.6245408746309633`*^9, 3.624540923092943*^9, 
   3.6246453362054033`*^9, 3.6246455301401653`*^9, 3.6282624332962914`*^9, {
   3.6282713579910583`*^9, 3.628271375696336*^9}, 3.628271577532089*^9, 
   3.628272063577351*^9, 3.6285708710330477`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{960, 1417},
WindowMargins->{{Automatic, 39}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 277, 7, 99, "Input"],
Cell[825, 29, 350, 6, 26, "Text"],
Cell[1178, 37, 188, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[1391, 45, 416, 7, 49, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1810, 54, 22248, 301, 2218, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[24073, 358, 344, 10, 21, "Input"],
Cell[24420, 370, 282, 9, 101, "Text"],
Cell[24705, 381, 213, 4, 27, "Input"],
Cell[24921, 387, 236, 5, 27, "Input"],
Cell[CellGroupData[{
Cell[25182, 396, 174, 2, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[25381, 402, 504, 10, 30, "Input"],
Cell[25888, 414, 3353, 47, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29290, 467, 168, 3, 67, "Section"],
Cell[CellGroupData[{
Cell[29483, 474, 445, 8, 37, "Subsubsection"],
Cell[29931, 484, 703, 15, 27, "Input"],
Cell[30637, 501, 419, 13, 30, "Input"],
Cell[CellGroupData[{
Cell[31081, 518, 356, 8, 27, "Input"],
Cell[31440, 528, 880, 19, 228, "Output"]
}, Open  ]],
Cell[32335, 550, 895, 18, 27, "Input"],
Cell[CellGroupData[{
Cell[33255, 572, 817, 14, 27, "Input"],
Cell[34075, 588, 13985, 227, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48097, 820, 1014, 19, 27, "Input"],
Cell[49114, 841, 2215, 41, 348, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51366, 887, 666, 18, 33, "Input"],
Cell[52035, 907, 3314, 45, 27, "Output"]
}, Open  ]],
Cell[55364, 955, 94, 1, 26, "Text"],
Cell[CellGroupData[{
Cell[55483, 960, 237, 7, 33, "Input"],
Cell[55723, 969, 160, 3, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55932, 978, 126, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[56083, 983, 172, 4, 27, "Input"],
Cell[56258, 989, 2156, 30, 27, "Output"]
}, Open  ]],
Cell[58429, 1022, 305, 9, 27, "Input"],
Cell[58737, 1033, 1769, 38, 73, "Input"],
Cell[CellGroupData[{
Cell[60531, 1075, 169, 4, 27, "Input"],
Cell[60703, 1081, 1112, 15, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61864, 1102, 108, 1, 24, "Subsubsection"],
Cell[61975, 1105, 373, 7, 27, "Input"],
Cell[62351, 1114, 97, 1, 26, "Text"],
Cell[62451, 1117, 171, 4, 26, "Text"],
Cell[62625, 1123, 561, 9, 27, "Input"],
Cell[63189, 1134, 812, 16, 33, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64050, 1156, 146, 2, 67, "Section"],
Cell[64199, 1160, 1549, 31, 118, "Input"],
Cell[CellGroupData[{
Cell[65773, 1195, 132, 1, 24, "Subsubsection"],
Cell[65908, 1198, 3090, 63, 178, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69035, 1266, 139, 1, 24, "Subsubsection"],
Cell[69177, 1269, 341, 7, 41, "Text"],
Cell[69521, 1278, 3437, 68, 163, "Input"],
Cell[72961, 1348, 209, 5, 27, "Input"],
Cell[CellGroupData[{
Cell[73195, 1357, 363, 10, 30, "Input"],
Cell[73561, 1369, 982, 13, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74592, 1388, 107, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[74724, 1393, 135, 2, 27, "Input"],
Cell[74862, 1397, 11201, 186, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86100, 1588, 838, 18, 33, "Input"],
Cell[86941, 1608, 15343, 251, 441, "Output"]
}, Open  ]],
Cell[102299, 1862, 183, 4, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102519, 1871, 130, 1, 34, "Subsection"],
Cell[102652, 1874, 392, 12, 27, "Input"],
Cell[CellGroupData[{
Cell[103069, 1890, 1115, 28, 53, "Input"],
Cell[104187, 1920, 13371, 222, 436, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117595, 2147, 1212, 30, 53, "Input"],
Cell[118810, 2179, 11685, 197, 440, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
